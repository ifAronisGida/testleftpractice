<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Trumpf.PageObjects</name>
    </assembly>
    <members>
        <member name="T:Trumpf.PageObjects.Core.CompactControlObject`1">
            <summary>
            Base class of control objects.
            </summary>
            <typeparam name="TSearch">The type to search for.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.Core.CompactControlObject`1.Node">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Core.CompactControlObject`1.SearchPattern">
            <summary>
            Gets the search pattern used to locate the control object.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.CompactControlObject`1.Init(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl})">
            <inheritdoc/>
        </member>
        <member name="T:Trumpf.PageObjects.Core.ControlObject`1">
            <summary>
            Base class of all control objects.
            </summary>
            <typeparam name="TNode">The node type of the control object.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ControlObject`1.UiNodeExists">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.ControlObject`1.Init(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl})">
            <summary>
            Initialize the control object.
            </summary>
            <param name="pattern">The search pattern used to locate the control.</param>
            <param name="predicate">Additional control predicate in case the search pattern yields multiple matches.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.ControlObject`1.Cast``1">
            <summary>
            Cast the control object.
            </summary>
            <typeparam name="TControl">The type to cast to.</typeparam>
            <returns>The control object with the new type.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.ControlObject`1.Click">
            <summary>
            Click the control.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.ControlObjectNode">
            <summary>
            A unique control object node in the UI tree.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ControlObjectNode.Predicate">
            <summary>
            Gets the predicate selector.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ControlObjectNode.SearchPattern">
            <summary>
            Gets the root to node search pattern.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ControlObjectNode.RootUncached">
            <summary>
            Gets the node representing this tree node in the UI.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ControlObjectNode.TryRootUncached">
            <summary>
            Gets the node representing this tree node in the UI, or null if not found.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ControlObjectNode.EnableCaching">
            <summary>
            Gets a value indicating whether to cache the node
            Control object must not be cached.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.ControlObjectNode.Matches(SmartBear.TestLeft.TestObjects.IObjectTreeNode)">
            <summary>
            Find all controls matching the search pattern and the predicate.
            </summary>
            <param name="parentHint">The parent or null if it should be searched.</param>
            <returns>Matching controls.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.ControlObjectNode.Init(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl})">
            <summary>
            Initialize the control object.
            </summary>
            <param name="pattern">The search pattern used to locate the control.</param>
            <param name="predicate">Additional control predicate in case the search pattern yields multiple matches.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IControlObject">
            <summary>
            Interface for the control object base class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IControlObject.Click">
            <summary>
            Click the control.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IControlObjectInternal">
            <summary>
            Internal interface for the control object base class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IControlObjectInternal.Init(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl})">
            <summary>
            Initialize the control object.
            </summary>
            <param name="pattern">The search pattern used to locate the control.</param>
            <param name="pred">The search predicate, if any.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IControlObjectNode">
            <summary>
            The control node interface.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IControlObjectNode.Predicate">
            <summary>
            Gets the filter predicate.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IControlObjectNode.Init(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl})">
            <summary>
            Initialize the control object.
            </summary>
            <param name="pattern">The search pattern used to locate the control.</param>
            <param name="predicate">Additional control predicate in case the search pattern yields multiple matches.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.CompactPageObject`1">
            <summary>
            Base class of (node-less) page objects.
            </summary>
            <typeparam name="SearchPatternType">The type to search for.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.Core.CompactPageObject`1.Node">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Core.CompactPageObject`1.SearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.CompactPageObject`1.Init(Trumpf.PageObjects.IUIObject)">
            <summary>
            Initialize this object.
            </summary>
            <param name="parent">The parent object.</param>
            <returns>The initialized page object.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.CompactPageObjectNode">
            <summary>
            Page object node class wrapping a UI tree node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.CompactPageObjectNode.SearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.CompactPageObjectNode.Init(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Initializes the page object.
            </summary>
            <param name="searchPattern">The search pattern.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IPageObjectInternal">
            <summary>
            Internal interface for the page object base class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IPageObjectInternal.OnCondition">
            <summary>
            Gets a value indicating whether the page object shall be returned, e.g. by the ON-method.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IPageObjectInternal.Picture">
            <summary>
            Gets or sets the image.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IPageObjectInternal.DotTree">
            <summary>
            Gets the dot tree representation.
            Clears image and statistics for this page objects and its (transitive) children.
            The tree does not contain generic type definition page objects.
            </summary>
            <returns>The dot tree representation of the page object tree.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IPageObjectNode">
            <summary>
            The node interface.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.PageObjectNodeBase">
            <summary>
            Page object node class wrapping a UI tree node.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.PageObject`1">
            <summary>
            Base class of all page objects.
            </summary>
            <typeparam name="TNode">The node type of the page object.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.Core.PageObject`1.Trumpf#PageObjects#Core#IPageObjectInternal#OnCondition">
            <summary>
            Gets a value indicating whether the page object shall be returned, e.g. by the ON-method.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.PageObject`1.OnCondition">
            <summary>
            Gets a value indicating whether the page object shall be returned, e.g. by the ON-method.
            The default is: yes.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.PageObject`1.Parent">
            <summary>
            Gets the parent of this page object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.PageObject`1.UiNodeExists">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Core.PageObject`1.Trumpf#PageObjects#Core#IPageObjectInternal#Picture">
            <summary>
            Gets or sets the page object image.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.PageObject`1.Trumpf#PageObjects#Core#IPageObjectInternal#DotTree">
            <summary>
            Gets the dot tree representation
            Clears picture and statistics for this page objects and its (transitive) children.
            The tree does not contain generic type definition page objects.
            </summary>
            <returns>The dot tree representation of the page object tree.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObject`1.Children">
            <summary>
            Gets the child page objects.
            Ignoring generic type definition page objects.
            </summary>
            <returns>The child page objects.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObject`1.Children``1">
            <summary>
            Gets the child page objects.
            If a child page object is a generic type definition that matches with the hint type, this type is returned.
            The hint is necessary since the type parameters cannot be "guessed".
            </summary>
            <typeparam name="TPageObjectChildHint">The hint type for a generic type definition page object child.</typeparam>
            <returns>The child page objects.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObject`1.Goto">
            <summary>
            Goto the page object, i.e. perform necessary action to make the page object visible on screen, do nothing if the page is already visible on screen.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObject`1.AutoGoto">
            <summary>
            Goto action for the page object, i.e. perform necessary action to make the page object visible on screen.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IProcessObjectNode">
            <summary>
            Interface for the process object node class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IProcessObjectNode.Process">
            <summary>
            Gets the process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IProcessObjectNode.ProcessName">
            <summary>
            Gets the process name.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IProcessObjectNode.Init(System.String)">
            <summary>
            Initializes the process object node.
            The process name is ignored if a process has been set.
            </summary>
            <param name="processName">The process name.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IProcessObjectNode.Init(SmartBear.TestLeft.TestObjects.IProcess)">
            <summary>
            Initializes the node with the process search pattern.
            </summary>
            <param name="process">The process.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.ProcessObjectNode">
            <summary>
            Base class for root nodes, i.e. nodes in the UI tree that are located from a process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ProcessObjectNode.SearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ProcessObjectNode.Root">
            <summary>
            Gets the node representing this tree node in the UI.
            It's the same as the root process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ProcessObjectNode.TryRoot">
            <summary>
            Gets the node representing this tree node in the UI, or null if not found
            It's the same as the root process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ProcessObjectNode.Process">
            <summary>
            Gets the process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ProcessObjectNode.ProcessName">
            <summary>
            Gets the process name.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ProcessObjectNode.Parent">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ProcessObjectNode.TryProcess">
            <summary>
            Gets the process or return null, if it cannot be found.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.ProcessObjectNode.TryParent">
            <summary>
            Gets the root node if possible, and otherwise return null.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.ProcessObjectNode.Init(System.String)">
            <summary>
            Initializes the process object node.
            </summary>
            <param name="processName">The process name.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.ProcessObjectNode.Init(SmartBear.TestLeft.TestObjects.IProcess)">
            <summary>
            Initializes the process object node.
            </summary>
            <param name="process">The process.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.RepeaterObjectNode">
            <summary>
            Repeater object node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RepeaterObjectNode.Root">
            <summary>
            Gets the node representing this tree node in the UI.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RepeaterObjectNode.TryRoot">
            <summary>
            Gets the node representing this tree node in the UI, or null if not found.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RepeaterObjectNode.SearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.Driver">
            <summary>
            The single TestExecute driver.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.Driver.Value">
            <summary>
            Gets or sets the TestExecute driver.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.Driver.DefaultDriver">
            <summary>
            Gets the default TestExecute driver.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IRootObjectInternal">
            <summary>
            Internal interface for root page objects.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IRootObjectInternal.PageObjectLocator">
            <summary>
            Gets the page object locator.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IRootObjectInternal.UIObjectInterfaceResolver">
            <summary>
            Gets the UI object interface resolver.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IRootObjectInternal.NodeLocator">
            <summary>
            Gets the node locator.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IRootObjectInternal.Await``1(System.Func{``0},System.String)">
            <summary>
            Get an await-object.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
            <param name="function">The function to wrap.</param>
            <param name="name">The display name used in timeout exceptions.</param>
            <returns>The wrapped object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IRootObjectInternal.DynamicChildren(System.Type)">
            <summary>
            Gets the dynamically registered children of a page object.
            </summary>
            <param name="pageObjectType">The parent page object type.</param>
            <returns>The registered children types.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IRootObjectNode">
            <summary>
            Interface for root object nodes.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IRootObjectNode.Configuration">
            <summary>
            Gets the node locator.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IRootObjectNode.Statistics">
            <summary>
            Gets the statistics.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IRootObjectNode.Driver">
            <summary>
            Gets or sets the TestExecute driver.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IRootObjectNodeInternal">
            <summary>
            Internal interface for root object nodes.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IRootObjectNodeInternal.NodeLocator">
            <summary>
            Gets the node locator.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.INodeLocator">
            <summary>
            The node object locator interface.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.INodeLocator.Clear">
            <summary>
            Clear the register.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.INodeLocator.Register(System.Int32,SmartBear.TestLeft.TestObjects.IControl)">
            <summary>
            Register the node object type with the given hash code.
            </summary>
            <param name="hash">The hash.</param>
            <param name="node">The object to register.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.INodeLocator.TryGet(System.Int32,SmartBear.TestLeft.TestObjects.IControl@)">
            <summary>
            Try get the registered node for the given hash code.
            </summary>
            <param name="hash">The hash.</param>
            <param name="result">The object, if any.</param>
            <returns>Whether a registered object was found.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.INodeLocator.AddPicture(System.Int32,System.Drawing.Image)">
            <summary>
            Add the picture for the UI object type.
            </summary>
            <param name="hash">The hash.</param>
            <param name="value">The image to add.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.INodeLocator.Picture(System.Int32)">
            <summary>
            Gets the picture for the UI object type.
            </summary>
            <param name="hash">The hash.</param>
            <returns>The image, or null if none exists.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IPageObjectLocator">
            <summary>
            The page object locator interface.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IPageObjectLocator.CacheObjectCount">
            <summary>
            Gets the cache object count.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IPageObjectLocator.CacheTypeCount">
            <summary>
            Gets the cache type count.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IPageObjectLocator.Clear">
            <summary>
            Clear the register.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IPageObjectLocator.Register``1(Trumpf.PageObjects.IPageObject)">
            <summary>
            Register the page object type with the given object.
            </summary>
            <typeparam name="TPageObject">The page object type.</typeparam>
            <param name="target">The object to register.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IPageObjectLocator.Unregister``1">
            <summary>
            Unregister the page object type.
            </summary>
            <typeparam name="TPageObject">The page object type.</typeparam>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IPageObjectLocator.TryGet``1(System.Collections.Generic.IEnumerable{``0}@)">
            <summary>
            Try get the registered objects for the given page object type.
            </summary>
            <typeparam name="TPageObject">The page object type.</typeparam>
            <param name="pageObject">The object, if any.</param>
            <returns>Whether a registered object was found.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IPageObjectLocator.Find``1(System.Predicate{``0})">
            <summary>
            Find a page object in the page object tree.
            </summary>
            <param name="condition">The condition that must evaluate true for the resulting page object.</param>
            <typeparam name="TPageObject">The page object type to search for.</typeparam>
            <returns>The page object.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IUIObjectInterfaceResolver">
            <summary>
            The UI object interface resolver interface.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectInterfaceResolver.Resolve``1">
            <summary>
            Resolve the control type.
            </summary>
            <typeparam name="TControl">The control type to resolve.</typeparam>
            <returns>The control type with parameter-less default constructor.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.NodeLocator">
            <summary>
            The page object locator class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.NodeLocator.Clear">
            <summary>
            Clear the register.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.NodeLocator.Register(System.Int32,SmartBear.TestLeft.TestObjects.IControl)">
            <summary>
            Register the page object type with the given object.
            </summary>
            <param name="hash">The object hash.</param>
            <param name="node">The object to register.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.NodeLocator.TryGet(System.Int32,SmartBear.TestLeft.TestObjects.IControl@)">
            <summary>
            Try get the registered objects for the given page object type.
            </summary>
            <param name="hash">The object hash.</param>
            <param name="result">The object, if any.</param>
            <returns>Whether a registered object was found.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.NodeLocator.AddPicture(System.Int32,System.Drawing.Image)">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.NodeLocator.Picture(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Trumpf.PageObjects.Core.PageObjectLocator">
            <summary>
            The page object locator class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.#ctor(Trumpf.PageObjects.IRootObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Core.PageObjectLocator"/> class.
            </summary>
            <param name="processObject">The process object.</param>
        </member>
        <member name="P:Trumpf.PageObjects.Core.PageObjectLocator.CacheTypeCount">
            <summary>
            Gets the cached page object type count.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.PageObjectLocator.CacheObjectCount">
            <summary>
            Gets the cached object count (for all page object types).
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.Clear">
            <summary>
            Clear the register.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.Register``1(Trumpf.PageObjects.IPageObject)">
            <summary>
            Register the page object type with the given object.
            </summary>
            <typeparam name="TPageObject">The page object type.</typeparam>
            <param name="target">The object to register.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.Unregister``1">
            <summary>
            Unregister the page object type.
            </summary>
            <typeparam name="TPageObject">The page object type.</typeparam>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.TryGet``1(System.Collections.Generic.IEnumerable{``0}@)">
            <summary>
            Try get the registered objects for the given page object type.
            </summary>
            <typeparam name="TPageObject">The page object type.</typeparam>
            <param name="targets">The object, if any.</param>
            <returns>Whether a registered object was found.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.Find``1(System.Predicate{``0})">
            <summary>
            Find a page object in the page object tree.
            </summary>
            <param name="condition">The condition that must evaluate true for the resulting page object.</param>
            <typeparam name="TPageObject">The page object type to search for.</typeparam>
            <returns>The page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.TryFind``1(System.Predicate{``0},``0@)">
            <summary>
            Find a page object in the page object tree.
            </summary>
            <param name="condition">The condition that must evaluate true for the resulting page object.</param>
            <param name="result">The result page object.</param>
            <typeparam name="TPageObject">The page object type to search for.</typeparam>
            <returns>The page object.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.PageObjectLocator.IPageObjectEqualityComparer">
            <summary>
            Equality comparer.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.IPageObjectEqualityComparer.Equals(Trumpf.PageObjects.IPageObject,Trumpf.PageObjects.IPageObject)">
            <summary>
            Equality comparer.
            </summary>
            <param name="x">The first value.</param>
            <param name="y">The second value.</param>
            <returns>Whether both page objects are equal.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.PageObjectLocator.IPageObjectEqualityComparer.GetHashCode(Trumpf.PageObjects.IPageObject)">
            <summary>
            Get the hash code.
            </summary>
            <param name="obj">The object.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.UIObjectInterfaceResolver">
            <summary>
            The UI object interface resolver.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectInterfaceResolver.#ctor(Trumpf.PageObjects.IRootObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Core.UIObjectInterfaceResolver"/> class.
            </summary>
            <param name="rootObject">The process object.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectInterfaceResolver.Resolve``1">
            <summary>
            Resolve the control type.
            </summary>
            <typeparam name="TControl">The control type to resolve.</typeparam>
            <returns>The control type with parameter-less default constructor.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectInterfaceResolver.ResolveControlType``1(System.Boolean)">
            <summary>
            Resolve the control type.
            </summary>
            <typeparam name="TControl">The control type to resolve.</typeparam>
            <param name="retryOnce">Whether to retry once.</param>
            <returns>The control type with parameter-less default constructor.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.RootObjectNode">
            <summary>
            Root page object node class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObjectNode.Trumpf#PageObjects#Core#IRootObjectNodeInternal#NodeLocator">
            <summary>
            Gets the node locator.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObjectNode.Configuration">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObjectNode.Statistics">
            <summary>
            Gets the statistics.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObjectNode.Driver">
            <summary>
            Gets or sets the TestExecute driver.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Core.RootObject`1">
            <summary>
            Base class for root page objects.
            </summary>
            <typeparam name="TNode">The node type of the root page object.</typeparam>
        </member>
        <member name="M:Trumpf.PageObjects.Core.RootObject`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Core.RootObject`1"/> class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObject`1.Driver">
            <summary>
            Gets or sets the (static) TestExecute driver.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObject`1.Trumpf#PageObjects#Core#IRootObjectInternal#NodeLocator">
            <summary>
            Gets the node locator.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObject`1.Trumpf#PageObjects#Core#IRootObjectInternal#PageObjectLocator">
            <summary>
            Gets the page object locator.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObject`1.Trumpf#PageObjects#Core#IRootObjectInternal#UIObjectInterfaceResolver">
            <summary>
            Gets the UI object interface resolver.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObject`1.Configuration">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.RootObject`1.Statistics">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.RootObject`1.Resolve``1">
            <summary>
            Resolve the root object interface to a loaded process object in the current app domain.
            </summary>
            <typeparam name="TRootObject">The interface to resolve.</typeparam>
            <returns>The root object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.RootObject`1.WriteDotTree(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.RootObject`1.Register``2">
            <summary>
            Register the page object type with the given object.
            </summary>
            <typeparam name="TChildPageObject">The child page object type.</typeparam>
            <typeparam name="TParentPageObject">The parent page object type.</typeparam>
            <returns>Whether the value not yet registered.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.RootObject`1.Trumpf#PageObjects#Core#IRootObjectInternal#DynamicChildren(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.RootObject`1.WritePdfTree(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.RootObject`1.Trumpf#PageObjects#Core#IRootObjectInternal#Await``1(System.Func{``0},System.String)">
            <summary>
            Gets an await-object.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
            <param name="function">The function to wrap.</param>
            <param name="name">The display name used in timeout exceptions.</param>
            <returns>The wrapped object.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.Search`1">
            <summary>
            A restricted search pattern.
            </summary>
            <typeparam name="TControlPattern">The underlying control pattern type.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.Core.Search`1.Pattern">
            <summary>
            Gets the control pattern.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Search`1.AndIsEnabled">
            <summary>
            Set the enabled constraint to true.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Search`1.AndIsVisible">
            <summary>
            Set the visible constraint to true.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Search`1.GetPatternItems">
            <summary>
            Get the pattern items.
            </summary>
            <returns>List of pattern items.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Search`1.And(System.String,System.Object)">
            <summary>
            Adds a custom property.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The property value.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Search`1.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Search`1.And(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Add another search constraint.
            </summary>
            <param name="additionalSearch">Additional search constraint.</param>
            <returns>The conjunction.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Search`1.AddOrConstraint(System.String,System.String)">
            <summary>
            Adds a constraint.
            </summary>
            <param name="initial">The initial pattern without regular expression symbols.</param>
            <param name="constraint">The OR-constraint to add without regular expression symbols.</param>
            <returns>The compound expression.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Search`1.ToRegexString(System.String)">
            <summary>
            Replace symbols as needed.
            </summary>
            <param name="text">The text.</param>
            <returns>The string without plus and dot.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IWebPageObjectNode">
            <summary>
            Interface for the process object node class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IWebPageObjectNode.Init(System.String,System.String)">
            <summary>
            Initializes the web page object node.
            </summary>
            <param name="objectIdentifier">The object identifier.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.WebPageObjectNode">
            <summary>
            Base class for root nodes, i.e. nodes in the UI tree that are located from a process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.WebPageObjectNode.WebBrowserSearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.WebPageObjectNode.Root">
            <summary>
            Gets the node representing this tree node in the UI.
            It's the same as the root process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.WebPageObjectNode.TryRoot">
            <summary>
            Gets the node representing this tree node in the UI, or null if not found
            It's the same as the root process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.WebPageObjectNode.Parent">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.WebPageObjectNode.WebPage">
            <summary>
            Gets the process.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.WebPageObjectNode.TryWebPage">
            <summary>
            Gets the process or return null, if it cannot be found.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.WebPageObjectNode.TryParent">
            <summary>
            Gets the root node if possible, and otherwise return null.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.WebPageObjectNode.Open(System.String)">
            <summary>
            Open the web page.
            </summary>
            <param name="url">The url to open.</param>
        </member>
        <member name="P:Trumpf.PageObjects.Core.WebPageObjectNode.SearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.WebPageObjectNode.Init(System.String,System.String)">
            <summary>
            Initializes the web page object node.
            </summary>
            <param name="objectIdentifier">The object identifier.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IUIObjectInternal">
            <summary>
            Internal interface for the UI object base class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectInternal.ControlSearchDepth">
            <summary>
            Gets the root to control search depth.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectInternal.PageObjectSearchDepth">
            <summary>
            Gets the root to control search depth.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectInternal.Root">
            <summary>
            Gets the root page object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectInternal.Index">
            <summary>
            Sets the 0-based control index.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectInternal.Init(Trumpf.PageObjects.IUIObject)">
            <summary>
            Initialize this object.
            </summary>
            <param name="parent">The parent object.</param>
            <returns>The initialized page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectInternal.Init(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initialize the control object.
            </summary>
            <param name="pageObjectSearchDepth">The maximum search depth used to locate the page object starting from the parent page object.</param>
            <param name="controlObjectSearchDepth">The maximum search depth used to locate the control object starting from the parent page object.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectInternal.ScrollTo(Trumpf.PageObjects.IUIObject,System.TimeSpan)">
            <summary>
            Scroll to the UI object.
            </summary>
            <param name="target">The UI object to scroll to.</param>
            <param name="timeout">The timeout to wait for the object to become visible between page downs.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectInternal.TryUnsnap">
            <summary>
            Unsnap the object.
            </summary>
            <returns>Whether the node was snapped before.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IUIObjectNode">
            <summary>
            The UI node interface.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNode.Refresh">
            <summary>
            Refresh the UI tree rooted in this node.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNode.Find``1(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Find a control from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <returns>The control or null if fails.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNode.Find``1(SmartBear.TestLeft.ISearchPattern,System.Int32)">
            <summary>
            Find a control from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <param name="depth">The search depth.</param>
            <returns>The control or null.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNode.TryFind``1(SmartBear.TestLeft.ISearchPattern,``0@)">
            <summary>
            Find a control from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <param name="result">The control or null.</param>
            <returns>Whether the control was found.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNode.TryFind``1(SmartBear.TestLeft.ISearchPattern,``0@,System.Int32)">
            <summary>
            Find a control from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <param name="result">The control or null.</param>
            <param name="depth">The search depth.</param>
            <returns>Whether the control was found.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNode.FindAll``1(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Find all controls from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <returns>The controls.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNode.FindAll``1(SmartBear.TestLeft.ISearchPattern,System.Int32)">
            <summary>
            Find all controls from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <param name="depth">The search depth (null for default).</param>
            <returns>The controls.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.IUIObjectNodeInternal">
            <summary>
            The internal UI node interface.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectNodeInternal.PageObjectSearchDepth">
            <summary>
            Gets the root to page object search depth.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectNodeInternal.ControlSearchDepth">
            <summary>
            Gets the root to control object search depth.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectNodeInternal.RootNode">
            <summary>
            Gets the process node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectNodeInternal.Index">
            <summary>
            Sets the 0-based control index.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectNodeInternal.TryRoot">
            <summary>
            Gets the node representing this tree node in the UI, or null if not found.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.IUIObjectNodeInternal.SearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNodeInternal.Init(Trumpf.PageObjects.Core.IUIObjectNode,System.Int32,System.Boolean,System.Func{System.Int32},System.Func{System.Int32})">
            <summary>
            Initialize this object.
            The parent node is used to search nodes without, hence disabling any caching.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="hash">The node hash.</param>
            <param name="enableImages">Whether to take an image.</param>
            <param name="pageObjectSearchDepth">The page object search depth.</param>
            <param name="controlObjectSearchDepth">The control object search depth.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNodeInternal.TrySnap">
            <summary>
            Snap the node object, i.e. associate it with a specific node in the UI tree. This disables lazy node evaluation.
            </summary>
            <returns>Whether the snap succeeded.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.IUIObjectNodeInternal.TryUnsnap">
            <summary>
            Unsnap the object.
            </summary>
            <returns>Whether the node was snapped before.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.UIObject`1">
            <summary>
            Base class of all page objects.
            </summary>
            <typeparam name="TNode">The node type of the page object.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.RootInternal">
            <summary>
            Gets the internal root node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#Core#IUIObjectInternal#PageObjectSearchDepth">
            <summary>
            Gets the root to control search depth.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.PageObjectSearchDepth">
            <summary>
            Gets the root to control search depth.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#Core#IUIObjectInternal#ControlSearchDepth">
            <summary>
            Gets the root to control search depth.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.ControlSearchDepth">
            <summary>
            Gets the root to control search depth.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#Core#IUIObjectInternal#Root">
            <summary>
            Gets the root page object.
            </summary>
            <returns>The root page object.</returns>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#Core#IUIObjectInternal#Index">
            <summary>
            Sets the 0-based control index.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#IUIObject#Node">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.VisibleOnScreen">
            <summary>
            Gets a value indicating whether the page object's node is visible on the screen.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Exists">
            <summary>
            Gets a value indicating whether the page object's node exists in the UI tree.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.ScreenLeft">
            <summary>
            Gets the horizontal position of the page object's left edge in screen coordinates.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.ScreenTop">
            <summary>
            Gets the vertical position of the page object's top edge in screen coordinates.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Width">
            <summary>
            Gets the width of the UI object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Height">
            <summary>
            Gets the height of the UI object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Enabled">
            <summary>
            Gets or sets a value indicating whether the UI object can respond to user interaction.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Visible">
            <summary>
            Gets or sets a value indicating whether the control and all its child controls are displayed.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Parent">
            <summary>
            Gets the parent of this page object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Picture">
            <summary>
            Gets a picture of the page object in its current state.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.Node">
            <summary>
            Gets the typed root node of the page object.
            This is the object this page object accesses to interact with UI elements.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.InternalNode">
            <summary>
            Gets the internal node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.IsVisibleOnScreen">
            <summary>
            Gets a value indicating whether the page object's node is visible on the screen.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObject`1.UiNodeExists">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#Core#IUIObjectInternal#Init(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initialize the control object.
            </summary>
            <param name="pageObjectSearchDepth">The maximum search depth used to locate the page object starting from the parent page object.</param>
            <param name="controlObjectSearchDepth">The maximum search depth used to locate the control object starting from the parent page object.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Init(Trumpf.PageObjects.IUIObject,Trumpf.PageObjects.Core.IUIObjectNode)">
            <summary>
            Initializes this object.
            </summary>
            <param name="parent">Parent page object.</param>
            <param name="root">The root node.</param>
            <returns>The initialized object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.On(System.Type)">
            <summary>
            Get the page object.
            </summary>
            <param name="pageType">The target page object type.</param>
            <returns>The page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.On``1">
            <summary>
            Get the page object.
            </summary>
            <typeparam name="TPageObject">The target page object type.</typeparam>
            <returns>The page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.On``1(System.Predicate{``0})">
            <summary>
            Get the page object.
            </summary>
            <param name="condition">The condition that must evaluate true for the resulting page object.</param>
            <typeparam name="TPageObject">The target page object type.</typeparam>
            <returns>The page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.TrySnap">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#Core#IUIObjectInternal#TryUnsnap">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Goto``1">
            <summary>
            Goto the page object.
            If the current page object cannot directly navigate to the target, it may forward it to its child page objects.
            Throws if the page object cannot be navigated to.
            </summary>
            <typeparam name="TPageObject">The target page object type.</typeparam>
            <returns>The target page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Goto``1(System.Predicate{``0})">
            <summary>
            Goto the page object.
            If the current page object cannot directly navigate to the target, it may forward it to its child page objects.
            Throws if the page object cannot be navigated to.
            </summary>
            <param name="condition">The condition that must evaluate true for target page object.</param>
            <typeparam name="TPageObject">The target page object type.</typeparam>
            <returns>The target page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#Core#IUIObjectInternal#Init(Trumpf.PageObjects.IUIObject)">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Init(Trumpf.PageObjects.IUIObject)">
            <summary>
            Initialize this object.
            </summary>
            <param name="parent">The parent object.</param>
            <returns>The initialized page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Await``1(System.Func{``0},System.String)">
            <summary>
            Gets an await-object.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
            <param name="function">The function to wrap.</param>
            <param name="name">The display name used in timeout exceptions.</param>
            <returns>The wrapped object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Find``1(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl},System.Nullable{System.Int32})">
            <summary>
            Gets the control.
            </summary>
            <typeparam name="TControl">The control type.</typeparam>
            <param name="pattern">The search pattern to locate the control.</param>
            <param name="predicate">Additional control predicate in case the search pattern yields multiple matches.</param>
            <param name="depth">The maximum search depth.</param>
            <returns>The control object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.FindAll``1(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl},System.Nullable{System.Int32})">
            <summary>
            Gets all matching controls.
            </summary>
            <typeparam name="TControl">The control type.</typeparam>
            <param name="pattern">The search pattern to locate the control.</param>
            <param name="predicate">Additional control predicate in case the search pattern yields multiple matches.</param>
            <param name="depth">The maximum search depth.</param>
            <returns>The control enumeration.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.ScrollTo">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.ScrollTo(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.Trumpf#PageObjects#Core#IUIObjectInternal#ScrollTo(Trumpf.PageObjects.IUIObject,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObject`1.WoolFor(System.Func{System.Boolean},System.String)">
            <summary>
            Gets a wrapped bool.
            </summary>
            <param name="function">The function to wrap.</param>
            <param name="name">The name of the property.</param>
            <returns>The wrapped bool.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Core.UIObjectNode">
            <summary>
            Page object node class wrapping a UI tree node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.InternalParent">
            <summary>
            Gets the internal parent.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.Index">
            <summary>
            Sets the 0-based control index.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.Root">
            <summary>
            Gets the node representing this tree node in the UI.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.TryRoot">
            <summary>
            Gets the node representing this tree node in the UI, or null if not found.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.RootNode">
            <summary>
            Gets the process node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.SearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.EnableCaching">
            <summary>
            Gets a value indicating whether to cache the node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.Parent">
            <summary>
            Gets the root node.
            The root must always be reevaluated on get. There for not setter must be defined.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.TryParent">
            <summary>
            Gets the root node if possible, and otherwise returns null.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.PageObjectSearchDepth">
            <summary>
            Gets the maximum search depth for locating node starting from the root.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.ControlSearchDepth">
            <summary>
            Gets the maximum search depth for locating controls starting from the node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.RootUncached">
            <summary>
            Gets the node representing this tree node in the UI.
            The node this class represents (for TestLeft of type IControl or similar)
            The node has to be searched from the <see cref="P:Trumpf.PageObjects.Core.UIObjectNode.Parent"/> node
            This node must locate itself relative to the root node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.TryRootUncached">
            <summary>
            Gets the node representing this tree node in the UI, or null if not found
            The node this class represents (for TestLeft of type IControl or similar)
            The node has to be searched from the <see cref="P:Trumpf.PageObjects.Core.UIObjectNode.Parent"/> node
            This node must locate itself relative to the root node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Core.UIObjectNode.EnableAutoSnap">
            <summary>
            Gets a value indicating whether to snap node automatically.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.Refresh">
            <summary>
            Refresh the UI tree rooted in this node.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.Accessible(SmartBear.TestLeft.TestObjects.IControl)">
            <summary>
            Determine whether the node is accessible, i.e. its properties can be retrieved.
            </summary>
            <param name="node">The node.</param>
            <returns>Whether the node is accessible or not.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.Matches(SmartBear.TestLeft.TestObjects.IObjectTreeNode)">
            <summary>
            Find all controls matching the search pattern.
            </summary>
            <param name="parentHint">The parent or null if it should be searched.</param>
            <returns>Matching controls.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.Init(Trumpf.PageObjects.Core.IUIObjectNode,System.Int32,System.Boolean,System.Func{System.Int32},System.Func{System.Int32})">
            <summary>
            Initialize this object.
            The parent node is used to search nodes without, hence disabling any caching.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="hash">The node hash.</param>
            <param name="enableImages">Whether to take images.</param>
            <param name="pageObjectSearchDepth">The page object search depth.</param>
            <param name="controlObjectSearchDepth">The control object search depth.</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.TrySnap">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.TryUnsnap">
            <inheritdoc/>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.Find``1(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Find a control from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <returns>The control or null if fails.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.Find``1(SmartBear.TestLeft.ISearchPattern,System.Int32)">
            <summary>
            Find a control from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <param name="depth">The search depth.</param>
            <returns>The control or null.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.TryFind``1(SmartBear.TestLeft.ISearchPattern,``0@)">
            <summary>
            Find a control from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <param name="result">The control or null.</param>
            <returns>Whether the control was found.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.TryFind``1(SmartBear.TestLeft.ISearchPattern,``0@,System.Int32)">
            <summary>
            Find a control from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <param name="result">The control or null.</param>
            <param name="depth">The search depth.</param>
            <returns>Whether the control was found.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.FindAll``1(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Find all controls from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <returns>The controls.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.FindAll``1(SmartBear.TestLeft.ISearchPattern,System.Int32)">
            <summary>
            Find all controls from the page object root node.
            </summary>
            <typeparam name="TControl">The type of the control.</typeparam>
            <param name="pattern">The search pattern.</param>
            <param name="depth">The search depth (null for default).</param>
            <returns>The controls.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.Cast``1">
            <summary>
            Cast the root node to an interface of another type.
            </summary>
            <typeparam name="T">The interface that will be implemented in the returned object.</typeparam>
            <returns>An object of the interface.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.GetRoot(System.Func{SmartBear.TestLeft.TestObjects.IControl})">
            <summary>
            Gets the root node.
            </summary>
            <param name="findNode">The find node function.</param>
            <returns>The node control.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.GetProperty``1(System.String,System.Object[])">
            <summary>
            Get the property.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.CallMethod``1(System.String,System.Object[])">
            <summary>
            Call the method.
            </summary>
            <typeparam name="T">The return type.</typeparam>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.CallMethod(System.String,System.Object[])">
            <summary>
            Call the method.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.UIObjectNode.SetProperty(System.String,System.Object,System.Object[])">
            <summary>
            Set the property.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Core.Waiting.Await`1">
            <summary>
            Object retrieval with throwing and non-throwing waiting methods.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Waiting.Await`1.#ctor(System.Func{`0},System.String,System.Type,System.Func{System.TimeSpan},System.Func{System.TimeSpan},System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Core.Waiting.Await`1"/> class.
            </summary>
            <param name="getValue">The function to evaluate for truth.</param>
            <param name="name">The property name for logging purposes.</param>
            <param name="owner">The owner type.</param>
            <param name="waitTimeout">The timeout.</param>
            <param name="positiveTimeout">The positive timeout for dialog-waits.</param>
            <param name="showDialog">Whether to show a dialog while waiting.</param>
        </member>
        <member name="P:Trumpf.PageObjects.Core.Waiting.Await`1.Value">
            <summary>
            Gets a fresh value evaluation.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Waiting.Await`1.op_Implicit(Trumpf.PageObjects.Core.Waiting.Await{`0})~`0">
            <summary>
            Implicit conversion to the underlying type.
            </summary>
            <param name="other">The value to convert.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Waiting.Await`1.TryWaitFor(System.Predicate{`0})">
            <summary>
            Try wait until the page object is visible on screen .
            </summary>
            <param name="expectation">Expectation predicate.</param>
            <returns>Whether the page object is visible on screen.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Waiting.Await`1.TryWaitFor(System.Predicate{`0},System.TimeSpan)">
            <summary>
            Try wait until the page object is visible on screen .
            </summary>
            <param name="expectation">Expectation predicate.</param>
            <param name="timeout">The timeout.</param>
            <returns>Whether the page object is visible on screen.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Waiting.Await`1.WaitFor(System.Predicate{`0},System.String)">
            <summary>
            Wait until the property evaluates to <c>true</c>.
            Show a dialog.
            </summary>
            <param name="expectation">Expectation predicate.</param>
            <param name="expectationText">Expectation text, i.e. the predicate expressed as a human-readable text.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Waiting.Await`1.WaitFor(System.Predicate{`0},System.String,System.TimeSpan)">
            <summary>
            Wait until the property evaluates to <c>true</c>.
            Show a dialog.
            </summary>
            <param name="expectation">Expectation predicate.</param>
            <param name="expectationText">Expectation text, i.e. the predicate expressed as a human-readable text.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Core.Waiting.Await`1.ToString">
            <summary>
            Gets the value as string.
            </summary>
            <returns>The value.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.ChildOfUsageException">
            <summary>
            Invalid ChildOf usage exception class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.ChildOfUsageException.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.ChildOfUsageException"/> class.
            </summary>
            <param name="type">The page object type.</param>
            <param name="text">The additional exception text.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.ControlObjectNotFoundException`1">
            <summary>
            Control object not found exception class.
            </summary>
            <typeparam name="TControlObject">The control object type.</typeparam>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.ControlObjectNotFoundException`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.ControlObjectNotFoundException`1"/> class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.ControlObjectNotFoundException`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.ControlObjectNotFoundException`1"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.ControlObjectNotFoundException`1.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.ControlObjectNotFoundException`1"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.DialogWaitForAbortedException">
            <summary>
            Dialog wait for aborted exception.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.DialogWaitForAbortedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.DialogWaitForAbortedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException"/> class.
            </summary>
            <param name="expectedCondition">The message that describes the error.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.DialogWaitForAbortedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException">
            <summary>
            Dialog wait for timeout exception.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException.#ctor(System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException"/> class.
            </summary>
            <param name="expectedCondition">The message that describes the error.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.DialogWaitForTimeoutException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.GotoException">
            <summary>
            Goto exception class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.GotoException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.GotoException"/> class.
            </summary>
            <param name="type">The type that cannot be navigated to.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.PageObjectNotFoundException`1">
            <summary>
            Page object not found exception class.
            </summary>
            <typeparam name="TPageObject">The page object type.</typeparam>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.PageObjectNotFoundException`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.PageObjectNotFoundException`1"/> class.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.ProcessObjectNotFoundException`1">
            <summary>
            Process object not found exception class.
            </summary>
            <typeparam name="TProcessObject">The process object type.</typeparam>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.ProcessObjectNotFoundException`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.ProcessObjectNotFoundException`1"/> class.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.TestNotReadyToRunException">
            <summary>
            Test not ready to run exception.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.TestNotReadyToRunException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.TestNotReadyToRunException"/> class.
            </summary>
            <param name="testClass">The class with tests that cannot be run.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Exceptions.WaitForException">
            <summary>
            Wait for visible on screen exception class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Exceptions.WaitForException.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Exceptions.WaitForException"/> class.
            </summary>
            <param name="type">The page object type.</param>
            <param name="name">The property name.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Extensions.IControlExtensions">
            <summary>
            Extension methods for TestLeft controls.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IControlExtensions.OrderFromLeftToRight``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Order the controls from left to right.
            </summary>
            <typeparam name="TSource">The enumerated type.</typeparam>
            <param name="source">The enumeration to order from left to right.</param>
            <returns>The ordered enumeration from screen left to right.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IControlExtensions.OrderFromTopToBottom``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Order the controls from top to bottom.
            </summary>
            <typeparam name="TSource">The enumerated type.</typeparam>
            <param name="source">The enumeration to order.</param>
            <returns>The ordered enumeration.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IControlExtensions.OrderFromTopLeftToBottomRight``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Order the controls from top left to bottom right.
            </summary>
            <typeparam name="TSource">The enumerated type.</typeparam>
            <param name="source">The enumeration to order.</param>
            <returns>The ordered enumeration.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IControlExtensions.VisibleOnScreen(SmartBear.TestLeft.TestObjects.IControl)">
            <summary>
            Gets a value indicating whether the object is visible on screen
            Return false if the invoked object is missing (whereas IControl.VisibleOnScreen throws in that case)
            If the node may disappear during the call to this function, this function should be used instead of IControl.VisibleOnScreen.
            </summary>
            <param name="node">The node the check.</param>
            <returns>A value indicating whether the object is visible to the user.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Extensions.IObjectExtensions">
            <summary>
            Extension methods for TestLeft controls.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IObjectExtensions.ItemAt(SmartBear.TestLeft.TestObjects.IObject,System.Int32)">
            <summary>
            Gets the item.
            </summary>
            <param name="node">The node.</param>
            <param name="index">The index.</param>
            <returns>The item element.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IObjectExtensions.ItemAt``1(SmartBear.TestLeft.TestObjects.IObject,System.Int32)">
            <summary>
            Gets the typed item.
            </summary>
            <param name="node">The node.</param>
            <param name="index">The index.</param>
            <returns>The type item element.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IObjectExtensions.Items(SmartBear.TestLeft.TestObjects.IObject)">
            <summary>
            Gets the items.
            </summary>
            <param name="node">The node.</param>
            <returns>The items.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Extensions.IObjectTreeNodeExtensions">
            <summary>
            Extension methods for TestLeft search methods.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IObjectTreeNodeExtensions.MyFindAll``1(SmartBear.TestLeft.TestObjects.IObjectTreeNode,SmartBear.TestLeft.ISearchPattern,System.Int32)">
            <summary>
            Finds all nodes with the given full class name.
            </summary>
            <param name="source">The node to search from.</param>
            <param name="pattern">The search pattern.</param>
            <param name="depth">The search depth.</param>
            <returns>The enumeration nodes.</returns>
            <typeparam name="T">The expected object type.</typeparam>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IObjectTreeNodeExtensions.TryGetProperty``1(SmartBear.TestLeft.TestObjects.IObjectTreeNode,System.String,``0@)">
            <summary>
            Tries to return the value of the specified property.
            </summary>
            <typeparam name="T">The type of the object to read.</typeparam>
            <param name="source">The source node.</param>
            <param name="propertyName">The property name.</param>
            <param name="result">The property value converted to a value of the T type, or default(T).</param>
            <returns>Whether the operation succeeded.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Extensions.IPageObjectExtensions">
            <summary>
            Extension methods for page objects.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IPageObjectExtensions.OrderPagesFromLeftToRight``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Order the controls from left to right.
            </summary>
            <typeparam name="TSource">The enumerated type.</typeparam>
            <param name="source">The enumeration to order from left to right.</param>
            <returns>The ordered enumeration from screen left to right.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IPageObjectExtensions.OrderPagesFromTopToBottom``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Order the controls from top to bottom.
            </summary>
            <typeparam name="TSource">The enumerated type.</typeparam>
            <param name="source">The enumeration to order.</param>
            <returns>The ordered enumeration.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IPageObjectExtensions.OrderPagesFromTopLeftToBottomRight``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Order the controls from top left to bottom right.
            </summary>
            <typeparam name="TSource">The enumerated type.</typeparam>
            <param name="source">The enumeration to order.</param>
            <returns>The ordered enumeration.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Extensions.IProcessObjectExtensions">
            <summary>
            Extension methods for process objects.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IProcessObjectExtensions.HardInit(Trumpf.PageObjects.IProcessObject,System.Func{SmartBear.TestLeft.IDriver},System.Predicate{System.Exception},System.Int32,System.TimeSpan)">
            <summary>
            Initializes the process object.
            </summary>
            <param name="processObject">The process object to initialize.</param>
            <param name="driverCreator">The driver creator.</param>
            <param name="retryOnCondition">The retry condition.</param>
            <param name="maxAttempts">The maximum number of retries.</param>
            <param name="retryInterval">The waiting time between retries.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IProcessObjectExtensions.Do``1(System.Action,System.Predicate{``0},System.Action,System.TimeSpan,System.Int32)">
            <summary>
            Retry on exception. Before retry execute recovery action.
            </summary>
            <typeparam name="E">The exception to retry on.</typeparam>
            <param name="action">The action to execute and potentially retry.</param>
            <param name="when">The exception condition.</param>
            <param name="recoveryAction">The recovery action to execute before a retry.</param>
            <param name="retryInterval">The retry interval.</param>
            <param name="maxAttempts">The number of attempts (1 = no retry).</param>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IProcessObjectExtensions.StopServiceAndKillSmartbearProcesses">
            <summary>
            Restart Test Execute
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Extensions.IProcessObjectExtensions.RetryAndRecover``2(System.Func{``0},System.Predicate{``1},System.Action,System.TimeSpan,System.Int32)">
            <summary>
            Retry on exception. Before retry execute recovery action.
            </summary>
            <typeparam name="T">The return type.</typeparam>
            <typeparam name="E">The exception to retry on.</typeparam>
            <param name="function">The action to execute and potentially retry.</param>
            <param name="when">The exception condition.</param>
            <param name="recoveryAction">The recovery action to execute before a retry.</param>
            <param name="retryInterval">The retry interval.</param>
            <param name="maxAttempts">The number of attempts (1 = no retry).</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Loader">
            <summary>
            Assembly loader class.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Loader.Logger">
            <summary>
            Gets the logger action.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Loader.DefaultLoadFolders">
            <summary>
            Gets the default assembly load folders.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Loader.RegisterRedirections(System.Action{System.String},System.String[])">
            <summary>
            Register assembly load redirection folders.
            </summary>
            <param name="logger">The logger to use. Passing <code>null</code> deactivates logging.</param>
            <param name="folders">The list of folders. If no directory is passed, the default is used.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Loader.RegisterRedirections(System.String[])">
            <summary>
            Register assembly load redirection folders.
            Discard logging.
            </summary>
            <param name="folders">The list of folders.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Logging.DotTree.DotTree">
            <summary>
            Dot tree class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.DotTree.#ctor(Trumpf.PageObjects.Logging.DotTree.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Logging.DotTree.DotTree"/> class.
            </summary>
            <param name="root">The tree root.</param>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.DotTree.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.DotTree.NodeCount">
            <summary>
            Gets the node count.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.DotTree.EdgeCount">
            <summary>
            Gets the edge count.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.DotTree.op_Addition(Trumpf.PageObjects.Logging.DotTree.DotTree,Trumpf.PageObjects.Logging.DotTree.DotTree)">
            <summary>
            Create the union of two trees.
            </summary>
            <param name="d1">First tree (extended).</param>
            <param name="d2">Second tree.</param>
            <returns>The union of the trees.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.DotTree.op_Addition(Trumpf.PageObjects.Logging.DotTree.DotTree,Trumpf.PageObjects.Logging.DotTree.Node)">
            <summary>
            Add nodes.
            </summary>
            <param name="d1">The tree to extend.</param>
            <param name="n">The new nodes.</param>
            <returns>The extended tree.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.DotTree.op_Addition(Trumpf.PageObjects.Logging.DotTree.DotTree,Trumpf.PageObjects.Logging.DotTree.Edge)">
            <summary>
            Add edges.
            </summary>
            <param name="d1">The tree to extend.</param>
            <param name="e">The new edges.</param>
            <returns>The extended tree.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.DotTree.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Trumpf.PageObjects.Logging.DotTree.Edge">
            <summary>
            Edge class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.Edge.Child">
            <summary>
            Gets or sets the child.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.Edge.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.Edge.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.Edge.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Trumpf.PageObjects.Logging.DotTree.Node">
            <summary>
            Node class.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Logging.DotTree.Node.NodeTypes">
            <summary>
            Node types.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.NodeTypes.PageObject">
            <summary>
            Node represents a page object.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.NodeTypes.PageTestClass">
            <summary>
            Node represents a page test class.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.NodeTypes.PageTest">
            <summary>
            Node represents a page test method.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.NodeTypes.PageTestIssue">
            <summary>
            Node represents a page test issue method.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Logging.DotTree.Node.Color">
            <summary>
            The frame colors.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.Color.White">
            <summary>
            The color is black.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.Color.Grey">
            <summary>
            The color is grey.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.Color.Orange">
            <summary>
            The color is orange.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.Color.Green">
            <summary>
            The color is green.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Logging.DotTree.Node.Color.Red">
            <summary>
            The color is red.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.Node.NodeType">
            <summary>
            Gets or sets the node type.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.Node.FrameColor">
            <summary>
            Gets or sets the frame color.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.Node.Id">
            <summary>
            Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.Node.Caption">
            <summary>
            Gets or sets the node caption.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Logging.DotTree.Node.Picture">
            <summary>
            Gets or sets the picture.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.Node.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.Node.Equals(System.Object)">
            <summary>
            Compare two nodes.
            </summary>
            <param name="obj">The other node.</param>
            <returns>Whether both nodes have the same ID.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.Node.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Trumpf.PageObjects.Logging.DotTree.Node.GetDescription(System.Enum)">
            <summary>
            Gets the description of an enum.
            </summary>
            <param name="value">The enum.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the enum does not have a <see cref="T:System.ComponentModel.DescriptionAttribute"/> attribute.</exception>
            <returns>Returns the description.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Nodes.INode">
            <summary>
            The node interface
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Nodes.INode.Node">
            <summary>
            Gets the node representing this tree node in the UI.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Nodes.INode.TryNode">
            <summary>
            Gets the node representing this tree node in the UI, or null if not found
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Nodes.INode.Image">
            <summary>
            Gets the image for the node
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Nodes.INode.RootToNodeSearchPattern">
            <summary>
            Gets the search patter used to locate the node starting from the root
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Nodes.INode.Tree(System.Int32)">
            <summary>
            Gets the UI sub-tree rooted in this page object
            </summary>
            <param name="depth">The tree depth</param>
            <returns>The tree</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Nodes.INode.Init(Trumpf.PageObjects.Nodes.INode)">
            <summary>
            Initialize this object.
            The parent node is used to search nodes without, hence disabling any caching.
            </summary>
            <param name="parent">The parent node</param>
            <returns>This object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Nodes.INode.ResetDriver(System.Boolean)">
            <summary>
            Reset the TestExecute driver
            </summary>
            <param name="restartTestExecuteProcesses">Whether to restart all TestExecute related processes</param>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.IPageObjectTestClass`1">
            <summary>
            Interface for page of test classes.
            </summary>
            <typeparam name="T">The page object associated with the test class.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.IPageObjectTestClass`1.Page">
            <summary>
            Gets the page object for the page test.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.IPageObjectTests">
            <summary>
            Page object interface.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.IPageObjectTests.Runnable">
            <summary>
            Gets a value indicating whether the tests should be executed.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.IPageObjectTests.ReadyToRun">
            <summary>
            Gets a value indicating whether the test is ready to execute.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.IPageObjectTests.PageType">
            <summary>
            Gets the page type.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.IPageObjectTests.BeforeFirstTest">
            <summary>
            Function to execute before the first test.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.IPageObjectTestsInternal">
            <summary>
            Internal page object interface.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.IPageObjectTestsInternal.Init(Trumpf.PageObjects.IPageObject)">
            <summary>
            Initialize from a node.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.IPageObjectTestsInternal.IsTestRunnable(System.Reflection.MethodInfo)">
            <summary>
            Gets a value indicating whether the given page test method shall be executed.
            </summary>
            <param name="pageTest">The page test method info.</param>
            <returns>Whether the given page test method shall be executed.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.Locate">
            <summary>
            UI object type locators.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Locate.Types">
            <summary>
            Gets the retrievable app domain types.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Locate.PageObjectTypes">
            <summary>
            Gets the page object types in the current app domain.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Locate.ControlObjectTypes">
            <summary>
            Gets the control object types in the current app domain.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Locate.ParentToChildMap">
            <summary>
            Gets the page object types.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Locate.UIObjectTypes(System.Func{System.Type,System.Boolean})">
            <summary>
            Gets the UI object types in the current app domain.
            </summary>
            <param name="selector">The selection predicate.</param>
            <returns>The type array.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Locate.ChildTypes(Trumpf.PageObjects.IPageObject)">
            <summary>
            Gets the page object types.
            </summary>
            <param name="pageObject">The parent page object.</param>
            <returns>The child types.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Locate.ClearCaches">
            <summary>
            Clear all caches.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Locate.Resolve(System.Type)">
            <summary>
            Resolve any page object interface type to an implementation.
            </summary>
            <param name="parentType">The type to resolve.</param>
            <returns>The resolved type.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.PageObjectTests`1">
            <summary>
            Base class for page object tests.
            </summary>
            <typeparam name="T">The page object type.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.PageObjectTests`1.Runnable">
            <summary>
            Gets a value indicating whether the tests should be executed.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.PageObjectTests`1.Page">
            <summary>
            Gets the page object for the page test.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.PageObjectTests`1.ReadyToRun">
            <summary>
            Gets a value indicating whether the test is ready to run.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.PageObjectTests`1.PageType">
            <summary>
            Gets the page type.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.PageObjectTests`1.BeforeFirstTest">
            <summary>
            Function to execute before the first test.
            Default: If not ready to run, call goto.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.PageObjectTests`1.Trumpf#PageObjects#PageTests#IPageObjectTestsInternal#Init(Trumpf.PageObjects.IPageObject)">
            <summary>
            Initialize the page object.
            </summary>
            <param name="pageUnderTest">The page object to drive the test.</param>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.PageObjectTests`1.Trumpf#PageObjects#PageTests#IPageObjectTestsInternal#IsTestRunnable(System.Reflection.MethodInfo)">
            <summary>
            Gets a value indicating whether the given page test method shall be executed.
            </summary>
            <param name="pageTest">The page test method info.</param>
            <returns>Whether the given page test method shall be executed.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.PageObjectTests`1.IsTestRunnable(System.Reflection.MethodInfo)">
            <summary>
            Gets a value indicating whether the given page test method shall be executed.
            </summary>
            <param name="pageTest">The page test method info.</param>
            <returns>Whether the given page test method shall be executed.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.PageObjectTests`1.Await``1(System.Func{``0})">
            <summary>
            Gets an await-object.
            </summary>
            <typeparam name="T2">The underlying type.</typeparam>
            <param name="function">The function to wrap.</param>
            <returns>The wrapped object.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.PageTestAttribute">
            <summary>
            Page test attribute used to mark page object tests.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.PageTestAttribute.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.PageTests.PageTestAttribute"/> class.
            Used to mark page tests inside a page test class.
            </summary>
            <param name="description">The test description.</param>
            <param name="id">The guid that uniquely identifies the test.</param>
            <param name="line">The method line.</param>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.PageTestAttribute.Description">
            <summary>
            Gets the test description.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.PageTestAttribute.Id">
            <summary>
            Gets the test ID.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.PageTestAttribute.Line">
            <summary>
            Gets the line where the test method was define.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.TestRunners">
            <summary>
            Page object test class runner.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.TestRunners.TestClassTypes">
            <summary>
            Gets the page object test class types of the entire APP-Domain.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.TestRunners.TestMethodStatistics">
            <summary>
            Gets the test method statistics.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.TestRunners.TestBottomUp(Trumpf.PageObjects.IPageObject)">
            <summary>
            Run all tests with the <c>PageTestAttribute</c>.
            </summary>
            <param name="source">The source page object.</param>
            <returns>This page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.TestRunners.Test(Trumpf.PageObjects.IPageObject,System.Func{System.Reflection.MethodInfo,System.Type,System.Boolean})">
            <summary>
            Run tests for this page object.
            </summary>
            <param name="source">The source page object.</param>
            <param name="filter">The test method filter predicate.</param>
            <returns>This page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.TestRunners.TestClasses(Trumpf.PageObjects.IPageObject)">
            <summary>
            Gets the test classes associated with this page object.
            </summary>
            <param name="source">The source page object.</param>
            <returns>The test classes associated with this page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.TestRunners.ClearPageObjectStatistic(Trumpf.PageObjects.IPageObject)">
            <summary>
            Clear the page object statistic.
            </summary>
            <param name="pageObject">The page object.</param>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.TestRunners.PageObjectStatistic(Trumpf.PageObjects.IPageObject)">
            <summary>
            Gets the page object statistic for a certain page object type.
            </summary>
            <param name="pageObject">The page object.</param>
            <returns>The page object statistic.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.TestRunners.Test(Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic,Trumpf.PageObjects.PageTests.IPageObjectTests,System.Reflection.MethodInfo)">
            <summary>
            Run tests and collect statistics.
            </summary>
            <param name="testClassStatistic">The test class statistics.</param>
            <param name="instance">The instance.</param>
            <param name="testMethod">The test method.</param>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.Statistics.PageObjectStatistic">
            <summary>
            Page objects statistics class.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.PageTests.Statistics.PageObjectStatistic.pageObjectStatistics">
            <summary>
            Test class type -> test class statistics.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.PageObjectStatistic.TestMethodStatistics">
            <summary>
            Gets the test method statistics.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.PageObjectStatistic.DotTrees">
            <summary>
            Gets the tree representation of the statistics.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.PageObjectStatistic.op_Addition(Trumpf.PageObjects.PageTests.Statistics.PageObjectStatistic,Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic)">
            <summary>
            Merge in test class statistics.
            </summary>
            <param name="c1">The page object statistics to extend.</param>
            <param name="c2">The test class statistics to add.</param>
            <returns>The extended page object statistic.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic">
            <summary>
            Test class statistics class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic.TestMethodStatistics">
            <summary>
            Gets the test method statistics.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic.DotTree">
            <summary>
            Gets the tree representation of the statistics.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic.op_Addition(Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic,Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic)">
            <summary>
            Merge test class statistic.
            </summary>
            <param name="c1">Test class statistic to extended.</param>
            <param name="c2">Test class statistic to add.</param>
            <returns>The merged test class statistic.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic.op_Addition(Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic,Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic)">
            <summary>
            Add test method statistic.
            </summary>
            <param name="c1">Test class statistic to extended.</param>
            <param name="c2">Test method statistic to add.</param>
            <returns>The extended test class statistics.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestClassStatistic.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic">
            <summary>
            Test methods statistic class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.MethodInfo">
            <summary>
            Gets or sets the method info.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.PageTestAttribute">
            <summary>
            Gets the page test attribute.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.Start">
            <summary>
            Gets or sets the test start time.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.Stop">
            <summary>
            Gets the test stop time.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.Info">
            <summary>
            Gets or sets the info.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.SuccessHasValue">
            <summary>
            Gets a value indicating whether the success state was set.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.Success">
            <summary>
            Gets or sets a value indicating whether the test was successful.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.PageType">
            <summary>
            Gets or sets the page type.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics">
            <summary>
            Test methods statistics class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics"/> class.
            </summary>
            <param name="methodInfo">The test method info.</param>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics.Values">
            <summary>
            Gets the test methods statistics.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics.MethodInfo">
            <summary>
            Gets the method info.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics.AnyFailed">
            <summary>
            Gets a value indicating whether a test failed.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics.AnyUnimplemented">
            <summary>
            Gets a value indicating whether a test was not implemented.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics.op_Addition(Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics,Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistic)">
            <summary>
            Add test method statistic.
            </summary>
            <param name="c1">The test method statistics to extend.</param>
            <param name="c2">The test method statistic to add.</param>
            <returns>The extended test method statistics.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics.op_Addition(Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics,Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics)">
            <summary>
            Merge test method statistics.
            </summary>
            <param name="c1">The test method statistics to extend.</param>
            <param name="c2">The test method statistics to add.</param>
            <returns>The extended test method statistics.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.PageTests.Statistics.TestMethodStatistics.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Trumpf.PageObjects.Configuration">
            <summary>
            The configuration class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Configuration"/> class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.WaitTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.PositiveWaitTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.ShowWaitingDialog">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.PageObjectSearchDepth">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.ControlSearchDepth">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.EnableImages">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.ScrollSleep">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.MaximumScrolls">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.ScrollDetectionTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.EnableAutoScroll">
            <summary>
            Gets or set a value indicating whether to automatically scroll to a control object if it is not visible on screen when an operation is issued on it.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Configuration.AutoGoto">
            <summary>
            Gets or set a value indicating whether to automatically call goto on the parent page object it a page object is not visible on screen.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.IChildOf`1">
            <summary>
            Interface to mark child page objects.
            </summary>
            <typeparam name="T">The parent's page object type.</typeparam>
        </member>
        <member name="T:Trumpf.PageObjects.IUIObject">
            <summary>
            Interface for the UI object base class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.Parent">
            <summary>
            Gets the parent of this UI object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.Node">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.VisibleOnScreen">
            <summary>
            Gets a value indicating whether the UI object's node is visible on the screen.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.Enabled">
            <summary>
            Gets or sets a value indicating whether the UI object can respond to user interaction.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.Visible">
            <summary>
            Gets or sets a value indicating whether the control and all its child controls are displayed.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.Exists">
            <summary>
            Gets a value indicating whether the UI object's node exists in the UI tree.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.ScreenLeft">
            <summary>
            Gets the horizontal position of the UI object's left edge in screen coordinates.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.ScreenTop">
            <summary>
            Gets the vertical position of the UI object's top edge in screen coordinates.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.Width">
            <summary>
            Gets the width of the UI object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.Height">
            <summary>
            Gets the height of the UI object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IUIObject.Picture">
            <summary>
            Gets a picture of the UI object.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.On(System.Type)">
            <summary>
            Get the specific page object.
            </summary>
            <param name="pageType">Type of the page object.</param>
            <returns>Type of page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.On``1">
            <summary>
            Get the specific page object.
            </summary>
            <typeparam name="TPageObject">Type of the page object.</typeparam>
            <returns>Type of page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.On``1(System.Predicate{``0})">
            <summary>
            Get the specific page object.
            </summary>
            <param name="condition">The condition that must evaluate true for the resulting page object.</param>
            <typeparam name="TPageObject">Type of the page object.</typeparam>
            <returns>Type of page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.TrySnap">
            <summary>
            Snap the page object, i.e. associate it with a specific node in the UI tree. This disables lazy node evaluation.
            </summary>
            <returns>Whether the snap succeeded.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.Goto``1">
            <summary>
            Goto the page object.
            Throws if the page object cannot be navigated to.
            </summary>
            <typeparam name="TPageObject">The target page object type.</typeparam>
            <returns>The target page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.Goto``1(System.Predicate{``0})">
            <summary>
            Goto the page object.
            Throws if the page object cannot be navigated to.
            </summary>
            <param name="condition">The condition that must evaluate true for target page object.</param>
            <typeparam name="TPageObject">The target page object type.</typeparam>
            <returns>The target page object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.Find``1(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl},System.Nullable{System.Int32})">
            <summary>
            Gets the control.
            </summary>
            <typeparam name="TControl">The control type.</typeparam>
            <param name="pattern">The search pattern to locate the control.</param>
            <param name="predicate">Additional control predicate in case the search pattern yields multiple matches.</param>
            <param name="depth">The maximum search depth.</param>
            <returns>The control object.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.FindAll``1(SmartBear.TestLeft.ISearchPattern,System.Predicate{SmartBear.TestLeft.TestObjects.IControl},System.Nullable{System.Int32})">
            <summary>
            Gets all matching controls.
            </summary>
            <typeparam name="TControl">The control type.</typeparam>
            <param name="pattern">The search pattern to locate the control.</param>
            <param name="predicate">Additional control predicate in case the search pattern yields multiple matches.</param>
            <param name="depth">The maximum search depth.</param>
            <returns>The control enumeration.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.ScrollTo">
            <summary>
            Scroll to the UI object.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.IUIObject.ScrollTo(System.TimeSpan)">
            <summary>
            Scroll to the UI object.
            </summary>
            <param name="timeout">The timeout to wait for the object to become visible between page downs.</param>
        </member>
        <member name="T:Trumpf.PageObjects.IPageObject">
            <summary>
            Interface for the page object base class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IPageObject.Parent">
            <summary>
            Gets the parent page object.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.IPageObject.Children">
            <summary>
            Gets the child page objects.
            Ignoring generic type definition page objects.
            </summary>
            <returns>The child page objects.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IPageObject.Children``1">
            <summary>
            Gets the child page objects.
            If a child page object is a generic type definition that matches with the hint type, this type is returned.
            The hint is necessary since the type parameters cannot be "guessed".
            </summary>
            <typeparam name="TPageObjectChildHint">The hint type for a generic type definition page object child.</typeparam>
            <returns>The child page objects.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IPageObject.Goto">
            <summary>
            Goto the page object, i.e. perform necessary action to make the page object visible on screen.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.IProcessObject">
            <summary>
            Interface for the process object base class.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.ProcessObject">
            <summary>
            Root process object class for any UI technology (WPF, WinForms etc.).
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.ProcessObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.ProcessObject"/> class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.ProcessObject.#ctor(SmartBear.TestLeft.TestObjects.IProcess)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.ProcessObject"/> class.
            </summary>
            <param name="value">The process node.</param>
        </member>
        <member name="M:Trumpf.PageObjects.ProcessObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.ProcessObject"/> class.
            </summary>
            <param name="value">The process name.</param>
        </member>
        <member name="P:Trumpf.PageObjects.ProcessObject.Node">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.ProcessObject.IsVisibleOnScreen">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.ProcessObject.ProcessName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.ProcessObject.Process">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.ProcessObject.UiNodeExists">
            <inheritdoc/>
        </member>
        <member name="T:Trumpf.PageObjects.RepeaterObject">
            <summary>
            Repeater page objects for all UI technologies.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.RepeaterObject.Node">
            <inheritdoc/>
        </member>
        <member name="T:Trumpf.PageObjects.IRootObject">
            <summary>
            Interface for root objects.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IRootObject.Driver">
            <summary>
            Gets or sets the TestExecute driver.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IRootObject.Configuration">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.IRootObject.Statistics">
            <summary>
            Gets the statistics.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.IRootObject.Register``2">
            <summary>
            Register the page object type with the given object.
            </summary>
            <typeparam name="TParentPageObject">The parent page object type.</typeparam>
            <typeparam name="TChildPageObject">The child page object type.</typeparam>
            <returns>Whether the value not yet registered.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IRootObject.WriteDotTree(System.String)">
            <summary>
            Write the page object tree in the DOT format.
            </summary>
            <param name="filename">The filename to write to with extension.</param>
            <returns>The absolute file name that was written.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.IRootObject.WritePdfTree(System.String,System.String)">
            <summary>
            Write the page object tree in the PDF format.
            </summary>
            <param name="filename">The filename to write to with extension.</param>
            <param name="dotBinaryPath">The hint path to the dot.exe binary file.</param>
            <returns>The absolute file name that was written.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Statistics">
            <summary>
            The statistics class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Statistics.AccessCounter">
            <summary>
            Gets or sets the access counter.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Statistics.InCache">
            <summary>
            Gets or sets the in-cache counter.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Statistics.AccessibleNodes">
            <summary>
            Gets or sets the accessible counter.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Statistics.VisibleOnScreenNodes">
            <summary>
            Gets or sets the visible on screen counter.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Statistics.CachingEnabledCounter">
            <summary>
            Gets or sets the caching enabled counter.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Statistics.Summary">
            <summary>
            Gets the counter values as string.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Statistics.Reset">
            <summary>
            Reset the counters.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.UIA.ControlObject">
            <summary>
            Base class of (node-less) page objects.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.UIA.PageObject">
            <summary>
            Base class of (node-less) page objects.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.UIA.Search">
            <summary>
            A restricted search pattern for objects accessible through UI Automation.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.UIA.Search.Any">
            <summary>
            Gets the pattern matching any node.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.By(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Create search pattern from the given pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns>The search.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.IsEnabled">
            <summary>
            Gets the enabled search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.IsVisibleOnScreen">
            <summary>
            Gets the visible on screen search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.ByClassname(System.String)">
            <summary>
            Create a search pattern for the given constraint by control type.
            </summary>
            <param name="classname">The class name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.ByObjectIdentifier(System.String)">
            <summary>
            Create a search pattern for the given object identifier.
            </summary>
            <param name="objectIdentifier">The object identifier to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.AndIsEnabled">
            <summary>
            Gets the extended search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.AndIsVisibleOnScreen">
            <summary>
            Gets the extended search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.AndByClassname(System.String)">
            <summary>
            Adds to a search pattern an additional search by control type.
            </summary>
            <param name="classname">The class name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.UIA.Search.AndByObjectIdentifier(System.String)">
            <summary>
            Adds to a search pattern an additional search by object identifier.
            </summary>
            <param name="objectIdentifier">The object identifier to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.DialogWait">
            <summary>
            Dialog wait class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Waiting.DialogWait"/> class.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.DialogWait.GWL">
            <summary>
            Windows enum for enabling click-through.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.GWL.ExStyle">
            <summary>
            A value.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.DialogWait.State">
            <summary>
            Dialog states.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.State.init">
            <summary>
            initial state.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.State.unknown">
            <summary>
            unknown state.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.State.good">
            <summary>
            good state.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.State.bad">
            <summary>
            bad state.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.State.good_timedout">
            <summary>
            good timeout state.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.State.good_userexit">
            <summary>
            good user exit state.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.State.bad_timedout">
            <summary>
            bad timeout state.
            </summary>
        </member>
        <member name="F:Trumpf.PageObjects.Waiting.DialogWait.State.bad_userexit">
            <summary>
            bad user exit state.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For(System.Func{System.Boolean},System.String)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For``1(System.Func{``0},System.Predicate{``0},System.String)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For(System.Func{System.Boolean},System.String,System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For``1(System.Func{``0},System.Predicate{``0},System.String,System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For(System.Func{System.Boolean},System.String,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="negativeTimeout">The negative timeout.</param>
            <param name="positiveTimeout">The positive timeout.</param>
            <param name="pollingPeriod">The polling time.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For``1(System.Func{``0},System.Predicate{``0},System.String,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="negativeTimeout">The negative timeout.</param>
            <param name="positiveTimeout">The positive timeout.</param>
            <param name="pollingPeriod">The polling time.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For``1(System.Func{``0},System.Predicate{``0},System.String,System.TimeSpan,System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="negativeTimeout">The negative timeout.</param>
            <param name="positiveTimeout">The positive timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.ForAction``1(System.String,System.Func{``0},System.Predicate{``0},System.String,System.TimeSpan,System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>. Shows an action text.
            </summary>
            <param name="actionText">The action to display.</param>
            <param name="function">The function to evaluate.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="negativeTimeout">The negative timeout.</param>
            <param name="positiveTimeout">The positive timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.ForAction``1(System.String,System.Func{``0},System.Predicate{``0},System.String)">
            <summary>
            Waits until a function evaluates to <c>true</c>. Shows an action text.
            </summary>
            <param name="actionText">The action to display.</param>
            <param name="function">The function to evaluate.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.ForAction(System.String,System.String)">
            <summary>
            Shows the action and expectation text. Requires manual acknowledgment.
            </summary>
            <param name="actionText">The action to display.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For(System.Func{System.Boolean},System.String,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="negativeTimeout">The negative timeout.</param>
            <param name="positiveTimeout">The positive timeout.</param>
            <param name="pollingPeriod">The polling time.</param>
            <param name="clickThrough">Whether to enable click-through mode.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.For``1(System.Func{``0},System.Predicate{``0},System.String,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean,System.String)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog including the current value.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="negativeTimeout">The negative timeout.</param>
            <param name="positiveTimeout">The positive timeout.</param>
            <param name="pollingPeriod">The polling time.</param>
            <param name="clickThrough">Whether to enable click-through mode.</param>
            <param name="actionText">The action text.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.OnDialogLoad(System.String,System.String)">
            <summary>
            On dialog load.
            </summary>
            <param name="expectationText">Text describing the expected condition.</param>
            <param name="actionText">The action text.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.EnterExitBad">
            <summary>
            Enter exit bad state.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.OnBadClick">
            <summary>
            Enter exit bad state.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.EnterExitGood">
            <summary>
            Enter exit good state.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.OnGoodClick">
            <summary>
            Enter exit good state.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.OnValueChanged(System.String)">
            <summary>
            On value changed.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.OnTruthChanged(System.Boolean)">
            <summary>
            On truth changed.
            </summary>
            <param name="truth">The truth value.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.OnTimerElapsed">
            <summary>
            On timer elapsed.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.Forr``1(System.Func{``0},System.Predicate{``0},System.String,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Boolean,System.String)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            Shows a dialog.
            </summary>
            <param name="function">The function to evaluate.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="expectationText">Text that explains the function's expectation.</param>
            <param name="negativeTimeout">The negative timeout.</param>
            <param name="positiveTimeout">The positive timeout.</param>
            <param name="pollingPeriod">The polling time.</param>
            <param name="clickThrough">Whether to enable click-through mode.</param>
            <param name="actionText">The action text.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.Timer(System.Threading.CancellationToken)">
            <summary>
            Timer function.
            </summary>
            <param name="c">The cancellation token.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.Evaluator``1(System.Threading.CancellationToken,System.Func{``0},System.Predicate{``0},System.TimeSpan)">
            <summary>
            Evaluator function.
            </summary>
            <param name="c">The cancellation token.</param>
            <param name="function">The function to call periodically.</param>
            <param name="condition">The condition to evaluate on the functions return value.</param>
            <param name="pollingPeriod">The polling time.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.DialogWait.DialogView">
            <summary>
            The view class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.DialogView.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Waiting.DialogWait.DialogView"/> class.
            </summary>
            <param name="showAutoActionBadLabel">Whether to show the auto action bad label.</param>
            <param name="showAutoActionGoodLabel">Whether to show the auto action good label.</param>
            <param name="clickThrough">Whether to enable click-through mode.</param>
            <param name="showCurrentValue">Whether to show the current value.</param>
            <param name="actionText">The action text.</param>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.DialogWait.DialogView.AutoActionGoodText">
            <summary>
            Sets the auto action good text.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.DialogWait.DialogView.AutoActionBadText">
            <summary>
            Sets the auto action bad text.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.DialogWait.DialogView.ExpectationText">
            <summary>
            Sets the expected text.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.DialogWait.DialogView.ActionText">
            <summary>
            Sets the action text.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.DialogWait.DialogView.GoodButtonText">
            <summary>
            Sets the good button text.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.DialogWait.DialogView.BadButtonText">
            <summary>
            Sets the bad button text.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.DialogWait.DialogView.Value">
            <summary>
            Sets the current value.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.DialogWait.DialogView.GoodButtonEnabled">
            <summary>
            Sets a value indicating whether the good button is enabled.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.DialogView.Invoke(System.Action,System.Boolean)">
            <summary>
            Invoke an action.
            </summary>
            <param name="a">action.</param>
            <param name="condition">Whether to execute the action.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.DialogView.UI(System.Action,System.Action,System.Action)">
            <summary>
            Show the dialog.
            </summary>
            <param name="dialogLoad">The dialog load action.</param>
            <param name="badClick">The bad click action.</param>
            <param name="goodClick">The good click action.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.DialogView.Close">
            <summary>
            Close the dialog.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.DialogView.Show">
            <summary>
            Sets a value indicating whether the view is visible.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.DialogView.SuspendDrawing">
            <summary>
            Suspend drawing.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.DialogView.ResumeDrawing">
            <summary>
            Resume drawing.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.DialogWait.DialogView.MakeClickThrough">
            <summary>
            Make dialog click-through.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.IAwaitExtensions">
            <summary>
            Extensions for IAwait of type bool.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.IAwaitExtensions.WaitForTrue(Trumpf.PageObjects.Waiting.IAwait{System.Boolean},System.String)">
            <summary>
            Wait for the expectation to become <c>true</c>.
            Throw on timeout.
            Use the default timeout as specified by configuration in the root object.
            </summary>
            <param name="awaitObject">The await object.</param>
            <param name="expectationText">The expectation text.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.IAwaitExtensions.WaitForFalse(Trumpf.PageObjects.Waiting.IAwait{System.Boolean},System.String)">
            <summary>
            Wait for the expectation to become <c>false</c>.
            Throw on timeout.
            Use the default timeout as specified by configuration in the root object.
            </summary>
            <param name="awaitObject">The await object.</param>
            <param name="expectationText">The expectation text.</param>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.IAwait`1">
            <summary>
            Interface for await-objects.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.IAwait`1.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.IAwait`1.TryWaitFor(System.Predicate{`0})">
            <summary>
            Try-wait for the expectation to become <c>true</c>.
            Return false on timeout.
            Use the default timeout as specified by configuration in the root object.
            </summary>
            <param name="expectation">The expectation.</param>
            <returns>Whether the expectation became true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.IAwait`1.TryWaitFor(System.Predicate{`0},System.TimeSpan)">
            <summary>
            Try-wait for the expectation to become <c>true</c>.
            Return false on timeout.
            </summary>
            <param name="expectation">The expectation.</param>
            <param name="timeout">The timeout.</param>
            <returns>Whether the expectation became true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.IAwait`1.WaitFor(System.Predicate{`0},System.String)">
            <summary>
            Wait for the expectation to become <c>true</c>.
            Throw on timeout.
            Use the default timeout as specified by configuration in the root object.
            </summary>
            <param name="expectation">The expectation.</param>
            <param name="expectationText">The expectation text.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.IAwait`1.WaitFor(System.Predicate{`0},System.String,System.TimeSpan)">
            <summary>
            Wait for the expectation to become <c>true</c>.
            Throw on timeout.
            </summary>
            <param name="expectation">The expectation.</param>
            <param name="expectationText">The expectation text.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.IAwait`1.ToString">
            <summary>
            Gets the value as string.
            </summary>
            <returns>The value.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.TryWait">
            <summary>
            Wait helper returning on timeout.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.For(System.Func{System.Boolean})">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.For``1(System.Func{``0},System.Predicate{``0})">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="condition">The condition to evaluate.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.For(System.Func{System.Boolean},System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.For``1(System.Func{``0},System.Predicate{``0},System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="condition">The condition to evaluate.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.For``1(System.Func{``0},System.Predicate{``0},System.TimeSpan,System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="condition">The condition to evaluate.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.InternalWait``1(System.Func{``0},System.Predicate{``0},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="condition">The condition to evaluate.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.UntilStableFor(System.Func{System.Boolean},System.TimeSpan,System.TimeSpan)">
            <summary>
            Wait until the specified property equals the specified value for defined time period or until the specified time limit is reached.
            </summary>
            <param name="function">Condition to evaluate in loop.</param>
            <param name="timeout">The time limit for the whole operation.</param>
            <param name="stableTime">The time the condition should evaluate true.</param>
            <returns>True if the specified property equals the specified value; else, false.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.UntilStable``1(System.Func{``0})">
            <summary>
            Waits until a function stabilizes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="function">The function to test for stabilization.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.UntilStable``1(System.Func{``0},System.TimeSpan)">
            <summary>
            Waits until a function stabilizes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="function">The function to test for stabilization.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.UntilStable``1(System.Func{``0},System.TimeSpan,System.TimeSpan)">
            <summary>
            Waits until a function stabilizes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="function">The function to test for stabilization.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.TryWait.UntilStableInternal``1(System.Func{``0},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Waits until a function stabilizes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="function">The function to test for stabilization.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
            <returns>If the condition turned true.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.Wait">
            <summary>
            Wait helper throwing on timeout.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.For(System.Func{System.Boolean})">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.For``1(System.Func{``0},System.Predicate{``0})">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="condition">The condition to evaluate.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.For(System.Func{System.Boolean},System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.For``1(System.Func{``0},System.Predicate{``0},System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="condition">The condition to evaluate.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.For``1(System.Func{``0},System.Predicate{``0},System.TimeSpan,System.TimeSpan)">
            <summary>
            Waits until a function evaluates to <c>true</c>.
            </summary>
            <param name="function">The function which is executed.</param>
            <param name="condition">The condition to evaluate.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.ActAndWaitForChange``1(System.Action,System.Func{``0})">
            <summary>
            Waits until a function's return value changes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="a">Action to execute.</param>s
            <param name="function">The function to test for stabilization.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.UntilStable``1(System.Func{``0})">
            <summary>
            Waits until a function stabilizes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="function">The function to test for stabilization.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.UntilStable``1(System.Func{``0},System.TimeSpan)">
            <summary>
            Waits until a function stabilizes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="function">The function to test for stabilization.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.UntilStable``1(System.Func{``0},System.TimeSpan,System.TimeSpan)">
            <summary>
            Waits until a function stabilizes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="function">The function to test for stabilization.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.UntilStableInternal``1(System.Func{``0},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Waits until a function stabilizes.
            </summary>
            <typeparam name="T">The function return type.</typeparam>
            <param name="function">The function to test for stabilization.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.Different``1(``0,``0)">
            <summary>
            Determine if the values are different.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="before">The first value.</param>
            <param name="after">The second value.</param>
            <returns>Whether both values unequal.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wait.RetryUntilSuccessOrTimeout``1(System.Func{``0},System.Predicate{``0},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Executes <paramref name="function"/> until its result is not <c>null</c>.
            </summary>
            <returns>The first result of <paramref name="function"/> which is not <c>null</c>.</returns>
            <param name="function">The function which is executed.</param>
            <param name="condition">The condition.</param>
            <param name="timeout">The maximum waiting time in milliseconds.</param>
            <param name="retryPause">Timeout between the condition check rounds.</param>
            <typeparam name="T">The type of the variable.</typeparam>
        </member>
        <member name="T:Trumpf.PageObjects.Waiting.Wool">
            <summary>
            Boolean equipped with throwing and non-throwing waiting methods.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.#ctor(Trumpf.PageObjects.Waiting.IAwait{System.Boolean},System.Func{System.Boolean},System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Waiting.Wool"/> class.
            </summary>
            <param name="waiter">The bool to wait for.</param>
            <param name="snap">Snap the object.</param>
            <param name="unsnap">Unsnap the object.</param>
        </member>
        <member name="P:Trumpf.PageObjects.Waiting.Wool.Value">
            <summary>
            Gets a fresh value evaluation.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.op_Implicit(Trumpf.PageObjects.Waiting.Wool)~System.Boolean">
            <summary>
            Implicit conversion to the underlying type.
            </summary>
            <param name="other">The value to convert.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.TryWaitFor">
            <summary>
            Try wait until the page object is visible on screen .
            </summary>
            <returns>Whether the page object is visible on screen.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.TryWaitFor(System.TimeSpan)">
            <summary>
            Try wait until the page object is visible on screen .
            </summary>
            <param name="timeout">The timeout.</param>
            <returns>Whether the page object is visible on screen.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.TryWaitForFalse">
            <summary>
            Try wait until the page object is not visible on screen .
            </summary>
            <returns>Whether the page object is visible on screen.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.TryWaitForFalse(System.TimeSpan)">
            <summary>
            Try wait until the page object is not visible on screen .
            </summary>
            <param name="timeout">The timeout.</param>
            <returns>Whether the page object is visible on screen.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.WaitFor">
            <summary>
            Wait until the property evaluates to true.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.WaitFor(System.TimeSpan)">
            <summary>
            Wait until the property evaluates to true.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.WaitForFalse">
            <summary>
            Wait until the page object is not visible on screen anymore.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.WaitForFalse(System.TimeSpan)">
            <summary>
            Wait until the page object is not visible on screen anymore.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.ActSnapped(System.Action)">
            <summary>
            Execute an action in snapped context.
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.ActSnapped(System.Func{System.Boolean})">
            <summary>
            Execute a function in snapped context.
            </summary>
            <param name="function">The function to evaluate.</param>
            <returns>The function result.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Waiting.Wool.ToString">
            <summary>
            Gets the value as string.
            </summary>
            <returns>The value.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Web.ControlObject">
            <summary>
            Base class of (node-less) page objects.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Web.IControlObject">
            <summary>
            Interface for a web control object.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Web.PageObject">
            <summary>
            Base class of (node-less) page objects.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.PageObject.TabUrl">
            <summary>
            Gets the current URL.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Web.Search">
            <summary>
            A restricted search pattern for web test objects.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.Search.Any">
            <summary>
            Gets the pattern matching any node.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.By(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Create search pattern from the given pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns>The search.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.IsEnabled">
            <summary>
            Gets the enabled search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.IsVisibleOnScreen">
            <summary>
            Gets the visible on screen search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.ByContentText(System.String)">
            <summary>
            Gets the content text search pattern.
            </summary>
            <param name="value">The content text to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.ByObjectIdentifier(System.String)">
            <summary>
            Gets the object identifier search pattern.
            </summary>
            <param name="value">The value to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.ByObjectType(System.String)">
            <summary>
            Create a search pattern for the given constraint by control type.
            </summary>
            <param name="value">The type to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.ByObjectLabel(System.String)">
            <summary>
            Create a search pattern for the given object label.
            </summary>
            <param name="value">The object label to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.ByClassName(System.String)">
            <summary>
            Create a search pattern for the given class name.
            </summary>
            <param name="value">The class name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.AndIsEnabled">
            <summary>
            Gets the extended search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.AndIsVisibleOnScreen">
            <summary>
            Gets the extended search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.AndByContentText(System.String)">
            <summary>
            Gets the extended search pattern.
            </summary>
            <param name="value">The content text to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.AndByObjectIdentifier(System.Object)">
            <summary>
            Gets the object identifier search pattern.
            </summary>
            <param name="value">The value to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.AndByObjectType(System.String)">
            <summary>
            Adds to a search pattern an additional search by object type.
            </summary>
            <param name="value">The object type to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.AndByObjectLabel(System.String)">
            <summary>
            Adds to a search pattern an additional search by object label.
            </summary>
            <param name="value">The object label to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.AndByClassName(System.String)">
            <summary>
            Adds to a search pattern an additional search by class name.
            </summary>
            <param name="value">The class name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.Web.Search.OrByObjectType(System.String)">
            <summary>
            Adds an additional search pattern.
            </summary>
            <param name="value">The object label to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.Web.IWebPageObject">
            <summary>
            Interface for web page objects.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.IWebPageObject.ObjectIdentifier">
            <summary>
            Gets the object identifier, e.g. <c>iexplore</c>.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.IWebPageObject.UrlPattern">
            <summary>
            Gets the url of the tab to access.
            Examples: <c>https://www.vdi-suedwest.de/</c> or <c>regexp:(https://www.vdi-suedwest.de/.*)</c>.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Web.IWebPageObject.Open">
            <summary>
            Open the web page in a new tab (the browser must already run).
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.Web.WebPageObject">
            <summary>
            Root web page object class.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Web.WebPageObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Trumpf.PageObjects.Web.WebPageObject"/> class.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.WebPageObject.Node">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.Web.WebPageObject.UrlPattern">
            <summary>
            Gets the url of the tab to access.
            Examples: <c>https://www.vdi-suedwest.de/</c> or <c>regexp:(https://www.vdi-suedwest.de/.*)</c>.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.WebPageObject.ObjectIdentifier">
            <summary>
            Gets the object identifier, e.g. <c>iexplore</c>
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.WebPageObject.UrlToOpen">
            <summary>
            Gets the url to open.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.WebPageObject.Url">
            <summary>
            Gets the URL.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.Web.WebPageObject.IsVisibleOnScreen">
            <summary>
            Gets a value indicating whether the web page is visible on screen.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.Web.WebPageObject.Open">
            <summary>
            Open the web page in a new tab (the browser must already run).
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WinForms.ControlObject">
            <summary>
            Base class for (node-less) control objects.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.WinForms.ControlObject.Name">
            <inheritdoc/>
        </member>
        <member name="P:Trumpf.PageObjects.WinForms.ControlObject.Text">
            <summary>
            Gets the <see cref="P:System.Windows.Forms.Control.Text"/> of the control.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WinForms.Controls.Button">
            <summary>
            Button control object.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WinForms.Controls.CheckBox">
            <summary>
            Checkbox control object.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.WinForms.Controls.CheckBox.Checked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Trumpf.PageObjects.WinForms.Controls.CheckBox"/> is checked.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WinForms.IControlObject">
            <summary>
            Interface for a control object for <see cref="T:System.Windows.Forms.Control"/>.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.WinForms.IControlObject.Name">
            <summary>
            Gets the <see cref="P:System.Windows.Forms.Control.Name"/> of the control.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.WinForms.IControlObject.Text">
            <summary>
            Gets or sets <see cref="P:System.Windows.Forms.Control.Text"/> of the control.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WinForms.PageObject">
            <summary>
            Base class of (node-less) page objects.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WinForms.Search">
            <summary>
            A restricted search pattern for Windows Forms test objects.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.WinForms.Search.Any">
            <summary>
            Gets the pattern matching any node.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.By(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Create search pattern from the given pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns>The search.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.IsEnabled">
            <summary>
            Gets the enabled search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.IsVisibleOnScreen">
            <summary>
            Gets the visible on screen search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.By``1(System.Boolean)">
            <summary>
            Create a search pattern for the given constraint by control type.
            </summary>
            <typeparam name="T">The type to search for.</typeparam>
            <param name="includeChildren">Whether to include derived types.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.ByControlName(System.String)">
            <summary>
            Create a search pattern for the given constraint by control name.
            </summary>
            <param name="controlName">The WPF control name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.AndIsEnabled">
            <summary>
            Gets the extended search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.AndIsVisibleOnScreen">
            <summary>
            Gets the extended search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.AndBy``1">
            <summary>
            Adds to a search pattern an additional search by control type.
            </summary>
            <typeparam name="T">The type to search for.</typeparam>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.AndByControlName(System.String)">
            <summary>
            Adds to a search pattern an additional search by control name.
            </summary>
            <param name="controlName">The WPF control name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.And(System.String,System.Object)">
            <summary>
            Adds a custom property.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The property value.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.OrBy``1">
            <summary>
            Adds to a search pattern an additional search by control type.
            </summary>
            <typeparam name="T">The type to search for.</typeparam>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.OrBy(System.Type)">
            <summary>
            Adds to a search pattern an additional search by control type.
            </summary>
            <param name="t">The type to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WinForms.Search.OrByControlName(System.String)">
            <summary>
            Adds to a search pattern an additional search by control name.
            </summary>
            <param name="controlName">The WPF control name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.WinForms.ViewControlObject`1">
            <summary>
            Base class of (node-less) page objects.
            </summary>
            <typeparam name="TView">The type to search for.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.WinForms.ViewControlObject`1.SearchPattern">
            <inheritdoc/>
        </member>
        <member name="T:Trumpf.PageObjects.WinForms.ViewPageObject`1">
            <summary>
            Base class of (node-less) page objects.
            </summary>
            <typeparam name="TView">The type to search for.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.WinForms.ViewPageObject`1.SearchPattern">
            <inheritdoc/>
        </member>
        <member name="T:Trumpf.PageObjects.WPF.ControlObject">
            <summary>
            Base class of (node-less) page objects.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WPF.Extensions">
            <summary>
            Extension methods for TestLeft controls.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Extensions.GetWPFControlOrdinalNo(SmartBear.TestLeft.TestObjects.IObject)">
            <summary>
            Gets the value of the WPF control ordinal number.
            </summary>
            <param name="node">The node.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Extensions.GetWpfControlText(SmartBear.TestLeft.TestObjects.IObject)">
            <summary>
            Gets the value of the object text. In most cases, this is the object's caption.
            </summary>
            <param name="node">The node.</param>
            <returns>The control text.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Extensions.GetClrFullClassName(SmartBear.TestLeft.TestObjects.IObject)">
            <summary>
            Gets the value of the full class name property.
            </summary>
            <param name="node">The node.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Extensions.GetText(SmartBear.TestLeft.TestObjects.IObject)">
            <summary>
            Gets the value of the text property.
            </summary>
            <param name="node">The node.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Extensions.GetDataContextProperty``1(SmartBear.TestLeft.TestObjects.IObject,System.String)">
            <summary>
            Get a data context property.
            </summary>
            <param name="node">The node.</param>
            <param name="propertyName">The property name.</param>
            <typeparam name="T">The property type.</typeparam>
            <returns>The value of the property in the data context.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Extensions.GetDataContextProperty``1(SmartBear.TestLeft.TestObjects.IObject,System.String[])">
            <summary>
            Get a data context property.
            </summary>
            <param name="node">The node.</param>
            <param name="propertyNames">The paths to the property.</param>
            <typeparam name="T">The property type.</typeparam>
            <returns>The value of the property in the data context.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.WPF.IControlObject">
            <summary>
            Interface for a control object for <see cref="T:System.Windows.Controls.Control"/>.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WPF.PageObject">
            <summary>
            Base class of (node-less) page objects.
            </summary>
        </member>
        <member name="T:Trumpf.PageObjects.WPF.Search">
            <summary>
            A restricted search pattern for Windows Presentation Foundation test objects.
            </summary>
        </member>
        <member name="P:Trumpf.PageObjects.WPF.Search.Any">
            <summary>
            Gets the pattern matching any node.
            </summary>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.By(SmartBear.TestLeft.ISearchPattern)">
            <summary>
            Create search pattern from the given pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns>The search.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.IsEnabled">
            <summary>
            Gets the enabled search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.IsVisibleOnScreen">
            <summary>
            Gets the visible on screen search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.ByIndex(System.Int32)">
            <summary>
            Gets the index search pattern.
            </summary>
            <param name="index">The index to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.By``1(System.Boolean)">
            <summary>
            Create a search pattern for the given constraint by control type.
            </summary>
            <param name="includeChildren">Whether to include derived types.</param>
            <typeparam name="T">The type to search for.</typeparam>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.ByControlName(System.String)">
            <summary>
            Create a search pattern for the given constraint by control name.
            </summary>
            <param name="controlName">The WPF control name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.ByAutomationId(System.String)">
            <summary>
            Create a search pattern for the given constraint by automation id.
            </summary>
            <param name="automationId">The WPF automation Id to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.ByUid(System.String)">
            <summary>
            Create a search pattern for the given constraint by UID.
            </summary>
            <param name="uid">The UID to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.AndIsEnabled">
            <summary>
            Gets the extended search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.AndIsVisibleOnScreen">
            <summary>
            Gets the extended search pattern.
            </summary>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.AndByIndex(System.Int32)">
            <summary>
            Gets the index search pattern.
            </summary>
            <param name="index">The index to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.AndBy``1">
            <summary>
            Adds to a search pattern an additional search by control type.
            </summary>
            <typeparam name="T">The type to search for.</typeparam>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.AndByControlName(System.String)">
            <summary>
            Adds to a search pattern an additional search by control name.
            </summary>
            <param name="cntrolName">The WPF control name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.AndByAutomationId(System.String)">
            <summary>
            Adds to a search pattern an additional search by automation id.
            </summary>
            <param name="automationId">The WPF automation Id to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.AndByUid(System.String)">
            <summary>
            Adds to a search pattern an additional search by automation id.
            </summary>
            <param name="uid">The UID to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.OrBy``1">
            <summary>
            Adds to a search pattern an additional search by control type.
            </summary>
            <typeparam name="T">The type to search for.</typeparam>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.OrBy(System.Type)">
            <summary>
            Adds to a search pattern an additional search by control type.
            </summary>
            <param name="t">The type to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.OrByControlName(System.String)">
            <summary>
            Adds to a search pattern an additional search by control name.
            </summary>
            <param name="controlName">The WPF control name to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.OrByAutomationId(System.String)">
            <summary>
            Adds to a search pattern an additional search by control name.
            </summary>
            <param name="automationId">The WPF automation Id to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="M:Trumpf.PageObjects.WPF.Search.OrByUid(System.String)">
            <summary>
            Adds to a search pattern an additional search by control name.
            </summary>
            <param name="uid">The UID to search for.</param>
            <returns>The search pattern.</returns>
        </member>
        <member name="T:Trumpf.PageObjects.WPF.ViewControlObject`1">
            <summary>
            Base class of (node-less) page objects.
            </summary>
            <typeparam name="TView">The type to search for.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.WPF.ViewControlObject`1.SearchPattern">
            <inheritdoc/>
        </member>
        <member name="T:Trumpf.PageObjects.WPF.ViewPageObject`1">
            <summary>
            Base class of (node-less) page objects.
            </summary>
            <typeparam name="TView">The type to search for.</typeparam>
        </member>
        <member name="P:Trumpf.PageObjects.WPF.ViewPageObject`1.SearchPattern">
            <inheritdoc/>
        </member>
    </members>
</doc>
