<?xml version="1.0"?>
<doc>
    <assembly>
        <name>factshub.connector</name>
    </assembly>
    <members>
        <member name="T:FactsHub.Connector.Accessor">
            <summary>
            Accessor class to add, remove and manipulate facts and their assets.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.Accessor.FactEntries">
            <summary>
            Gets the fact entries accessor.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.Accessor.Tags">
            <summary>
            Gets the fact entries accessor.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.Accessor.Assets">
            <summary>
            Gets the assets accessor.
            </summary>
        </member>
        <member name="M:FactsHub.Connector.Accessor.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initialize.
            </summary>
            <param name="client">The client.</param>
        </member>
        <member name="M:FactsHub.Connector.Accessor.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:FactsHub.Connector.Accessor"/> class.
            </summary>
            <param name="address">The addess to contact.</param>
        </member>
        <member name="M:FactsHub.Connector.Accessor.Dispose">
            <summary>
            Dispose the object.
            </summary>
        </member>
        <member name="T:FactsHub.Connector.AssetsAccessor">
            <summary>
            The assets accessor.
            </summary>
        </member>
        <member name="M:FactsHub.Connector.AssetsAccessor.GetAssets(System.Guid)">
            <summary>
            Get the assets of a fact.
            </summary>
            <param name="factId">The fact ID.</param>
            <returns>The associated assets.</returns>
        </member>
        <member name="M:FactsHub.Connector.AssetsAccessor.Asset(System.Guid,System.String)">
            <summary>
            Get the asset content.
            </summary>
            <param name="factId">The fact ID.</param>
            <param name="filename">The asset file name.</param>
            <returns></returns>
        </member>
        <member name="M:FactsHub.Connector.AssetsAccessor.GetAssetsAsZip(System.String,FactsHub.Model.FactEntryFilter,FactsHub.Model.FactFilter)">
            <summary>
            Gets the assets as ZIP.
            </summary>
            <param name="pathToZipFile">The path to store the ZIP file to.</param>
            <param name="factEntryFilter">The fact entry filter.</param>
            <param name="factFilter">The fact filter.</param>
        </member>
        <member name="T:FactsHub.Connector.ApiBase">
            <summary>
            The controller base class.
            </summary>
        </member>
        <member name="F:FactsHub.Connector.ApiBase.client">
            <summary>
            Gets the client.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.ApiBase.sep">
            <summary>
            Gets the seperator character.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.ApiBase.Route">
            <summary>
            Gets the route.
            </summary>
        </member>
        <member name="T:FactsHub.Connector.FactsAccessor">
            <summary>
            Fact entries accessor.
            </summary>
        </member>
        <member name="M:FactsHub.Connector.FactsAccessor.TryGet(System.Guid)">
            <summary>
            Get a fact entry by ID.
            </summary>
            <param name="factId">The fact ID.</param>
            <returns>The fact entry.</returns>
        </member>
        <member name="M:FactsHub.Connector.FactsAccessor.Get(FactsHub.Model.FactEntryFilter,FactsHub.Model.FactFilter)">
            <summary>
            Get the facts by filter.
            </summary>
            <param name="factEntryFilter">The fact entry filter.</param>
            <param name="factFilter">The fact filter.</param>
            <returns>The fact sequence.</returns>
        </member>
        <member name="M:FactsHub.Connector.FactsAccessor.GetWithTags(FactsHub.Model.FactEntryFilter,FactsHub.Model.FactFilter)">
            <summary>
            Get the facts with tags by filter.
            </summary>
            <param name="factEntryFilter">The fact entry filter.</param>
            <param name="factFilter">The fact filter.</param>
            <returns>The facts with tags (linked).</returns>
        </member>
        <member name="M:FactsHub.Connector.FactsAccessor.Put(FactsHub.Model.Fact)">
            <summary>
            Put a fact fact entry.
            </summary>
            <param name="factEntry">The fact entry.</param>
        </member>
        <member name="M:FactsHub.Connector.FactsAccessor.Put(System.Collections.Generic.IEnumerable{FactsHub.Model.Fact})">
            <summary>
            Put a sequence of fact entries.
            </summary>
            <param name="factEntries">The fact entries.</param>
        </member>
        <member name="M:FactsHub.Connector.FactsAccessor.Delete(System.Guid)">
            <summary>
            Delete a fact entry.
            </summary>
            <param name="factId">The fact ID.</param>
        </member>
        <member name="T:FactsHub.Connector.IClaimExtensions">
            <summary>
            Claim interface extensions.
            </summary>
        </member>
        <member name="M:FactsHub.Connector.IClaimExtensions.Start(FactsHub.Model.IClaim,FactsHub.Model.Configuration,System.String)">
            <summary>
            Start a fact for a given claim.
            </summary>
            <param name="claim">The claim.</param>
            <param name="configuration">The configuration.</param>
            <param name="remarks">The optional remarks.</param>
            <returns>The running fact.</returns>
        </member>
        <member name="M:FactsHub.Connector.IClaimExtensions.TryStart(FactsHub.Model.IClaim,FactsHub.Model.Configuration,System.String)">
            <summary>
            Try to start a fact for a given claim.
            </summary>
            <param name="claim">The claim.</param>
            <param name="configuration">The configuration.</param>
            <param name="remarks">The optional remarks.</param>
            <returns>The running fact.</returns>
        </member>
        <member name="T:FactsHub.Connector.IRunningFact">
            <summary>
            Running fact interface.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.IRunningFact.Fact">
            <summary>
            Gets the fact associated with this running fact.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.IRunningFact.IsRunning">
            <summary>
            Gets a value indicating whether the fact is currently in the running state.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.IRunningFact.Try">
            <summary>
            Gets the non-throwing interface.
            </summary>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.Start(FactsHub.Model.IClaim,System.String)">
            <summary>
            Start a fact for a given claim.
            </summary>
            <param name="claim">The claim.</param>
            <param name="remarks">The optional remarks.</param>
            <returns>The running fact.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.AttachTo(System.Guid)">
            <summary>
            Attach to an existing fact.
            </summary>
            <param name="guid">The ID of the fact to attach to.</param>
            <returns>The running fact.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.Abort(System.String)">
            <summary>
            Finish the running fact as aborted.
            </summary>
            <param name="remarks">The optional remarks.</param>
            <returns>The fact after the operation.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.Skip(System.String)">
            <summary>
            Finish the running fact as skipped.
            </summary>
            <param name="remarks">The optional remarks.</param>
            <returns>The fact after the operation.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.Finish(FactsHub.Model.Outcome,System.String)">
            <summary>
            Finish the running fact with a given outcome.
            </summary>
            <param name="outcome">The outcome.</param>
            <param name="remarks">The optional remarks.</param>
            <returns>The fact after the operation.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.AddOrUpdateAsset(System.String,System.String)">
            <summary>
            Add or update an asset.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="remarks">The optional remarks.</param>
            <returns>The fact after the operation.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.AppendRemark(System.String)">
            <summary>
            Append a remark.
            </summary>
            <param name="remarks">The optional remarks.</param>
            <returns>The fact after the operation.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.AppendDescription(System.String)">
            <summary>
            Append a description.
            </summary>
            <param name="description">The optional remarks.</param>
            <returns>The fact after the operation.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFact.AddTag(System.String,System.String)">
            <summary>
            Add a tag.
            </summary>
            <param name="name">The tag name (without #).</param>
            <param name="remarks">The optional remarks.</param>
            <returns>The fact after the operation.</returns>
        </member>
        <member name="T:FactsHub.Connector.IRunningFactExtensions">
            <summary>
            Running fact extensions.
            </summary>
        </member>
        <member name="M:FactsHub.Connector.IRunningFactExtensions.AttachToNext(FactsHub.Connector.IRunningFact)">
            <summary>
            Attach the next fact.
            </summary>
            <param name="runningFact">The running fact.</param>
            <returns>The next fact as a running fact.</returns>
        </member>
        <member name="M:FactsHub.Connector.IRunningFactExtensions.AttachToPrevious(FactsHub.Connector.IRunningFact)">
            <summary>
            Attach the previous fact.
            </summary>
            <param name="runningFact">The running fact.</param>
            <returns>The previous fact as a running fact.</returns>
        </member>
        <member name="T:FactsHub.Connector.RunningFact">
            <summary>
            Running fact class.
            </summary>
        </member>
        <member name="P:FactsHub.Connector.RunningFact.Fact">
            <inheritdoc />
        </member>
        <member name="P:FactsHub.Connector.RunningFact.IsRunning">
            <inheritdoc />
        </member>
        <member name="P:FactsHub.Connector.RunningFact.Try">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.#ctor(FactsHub.Model.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:FactsHub.Connector.RunningFact"/> class.
            </summary>
            <param name="configuration">The configuration used to contact the FactsHub service.</param>
        </member>
        <member name="M:FactsHub.Connector.RunningFact.Start(FactsHub.Model.IClaim,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.AttachTo(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.Abort(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.Skip(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.Finish(FactsHub.Model.Outcome,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.AddOrUpdateAsset(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.AppendRemark(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.AppendDescription(System.String)">
            <inheritdoc />
        </member>
        <member name="M:FactsHub.Connector.RunningFact.AddTag(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Connector.TagAccessor">
            <summary>
            Fact entries accessor.
            </summary>
        </member>
        <member name="M:FactsHub.Connector.TagAccessor.Add(System.String,System.String)">
            <summary>
            Get a fact entry by ID.
            </summary>
            <param name="name">The tag name (without #)</param>
            <param name="description">The tag description (can include markdown)</param>
            <returns>The added tag.</returns>
        </member>
        <member name="T:FactsHub.Model.AppDataPersister">
            <summary>
            Default setter.
            todo: do we need to implement IDisposible (to release ReaderWriterLockSlim)?
            </summary>
        </member>
        <member name="P:FactsHub.Model.AppDataPersister.Last">
            <summary>
            Gets or sets the last ID.
            </summary>
        </member>
        <member name="T:FactsHub.Model.Configuration">
            <summary>
            Configruation for the FactsHub service.
            </summary>
        </member>
        <member name="P:FactsHub.Model.Configuration.ServerBaseAddress">
            <summary>
            Gets or sets the server address.
            </summary>
        </member>
        <member name="P:FactsHub.Model.Configuration.GuidPersistence">
            <summary>
            Gets or sets the persistence object used to read and write the next and previous fact links.
            </summary>
        </member>
        <member name="P:FactsHub.Model.Configuration.Log">
            <summary>
            Gets or sets the action used to log messages.
            </summary>
        </member>
        <member name="M:FactsHub.Model.Configuration.#ctor(System.Uri,FactsHub.Model.IGuidPersistence)">
            <summary>
            Initializes a new instance of the <see cref="T:FactsHub.Model.Configuration"/> class.
            </summary>
            <param name="serverBaseAddress">The FactsHub server URI.</param>
            <param name="guidPersistence">The guid persistence object.</param>
        </member>
        <member name="M:FactsHub.Model.Configuration.#ctor(System.String,FactsHub.Model.IGuidPersistence)">
            <summary>
            Initializes a new instance of the <see cref="T:FactsHub.Model.Configuration"/> class.
            </summary>
            <param name="serverAddress">The FactsHub server URI.</param>
            <param name="guidPersistence">The guid persistence object.</param>
        </member>
        <member name="T:FactsHub.Model.IGuidPersistence">
            <summary>
            Interface to persist fact IDs.
            </summary>
        </member>
        <member name="P:FactsHub.Model.IGuidPersistence.Last">
            <summary>
            Gets or sets the last ID.
            </summary>
        </member>
        <member name="T:FactsHub.Model.ConnectorException">
            <summary>
            Connector exception.
            </summary>
        </member>
        <member name="P:FactsHub.Model.ConnectorException.Message">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToAbortException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToAddFileException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToAddTagException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToAppendDescriptionException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToAppendRemarkException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToAttachToRunningClaimException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToDeleteEntryException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToFinishException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToGetEntriesException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToGetEntryException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToGetFileException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToPutEntryException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToSkipException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FailedToStartException">
            <inheritdoc />
        </member>
        <member name="T:FactsHub.Model.FactExtensions">
            <summary>
            Fact extension methods.
            </summary>
        </member>
    </members>
</doc>
